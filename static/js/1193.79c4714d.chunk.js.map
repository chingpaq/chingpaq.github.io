{"version":3,"file":"static/js/1193.79c4714d.chunk.js","mappings":"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","sources":["webpack://flowhero/./src/appFiles/components/TopBar/CompanySettings/CompanySettings.module.scss?c634","appFiles/components/TopBar/CompanySettings/CompanySettings.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"host\":\"CompanySettings_host__BUW5K\",\"labeledContainerLabel\":\"CompanySettings_labeledContainerLabel__-BJE5\",\"label\":\"CompanySettings_label__KJjqm\",\"userslistContainer\":\"CompanySettings_userslistContainer__AeiAs\",\"companyEmployeesContainer\":\"CompanySettings_companyEmployeesContainer__QBao2\"};","import moment from 'moment';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { first } from 'rxjs/operators';\nimport 'react-tabs/style/react-tabs.css';\nimport { take } from 'rxjs/operators';\nimport { setAuthenticatedUser } from '../../../reduxStore/actions/authActions';\nimport { setCompanyData } from '../../../reduxStore/actions/flowActions';\nimport { tutorialModalOpen } from '../../../reduxStore/actions/modalsActions';\nimport { getAllUsers } from '../../../services/user.service';\nimport { setCompanyDetails } from '../../../services/company.service';\nimport { industryFields, numberOfEmployees } from '../../../shared/utility';\nimport { CompanyDataUpdate } from '../../common';\n\nimport cls from './CompanySettings.module.scss';\n\nfunction CompanySettings(props) {\n\tconst { companyUsersArray, companyData, position } = props;\n\tconst [, setContinueDisabled] = useState(true);\n\tconst [, setCompanyUsers] = useState([\n\t\t...(companyUsersArray.map(i => ({\n\t\t\tid: i.id,\n\t\t\tfirst_name: i.first_name,\n\t\t\tlast_name: i.last_name,\n\t\t\temail: i.email,\n\t\t\tposition: `${i.positions?.map(u => u.name).join(', ')}`,\n\t\t\tis_admin: i.is_admin,\n\t\t\tphoto: i.photo,\n\t\t\ttimezone: i.timezone,\n\t\t})) ?? []),\n\t]);\n\tconst { name, founding_date, employees_no, industry } = companyData;\n\tconst [elementsTouched, setElementsTouched] = useState({\n\t\tname: companyData?.name?.length > 2,\n\t\tdisplay_name: companyData?.display_name?.length > 2,\n\t\tfounding_date: moment(companyData.founding_date, 'YYYY-MM-DD').diff(moment().format('YYYY-MM-DD')) < 0,\n\t\temployees_no: numberOfEmployees.some(i => i.value === companyData.employees_no),\n\t\tindustry: industryFields?.some(i => i.label == companyData.industry),\n\n\t});\n\n\tconst [setUsers_ApiError] = useState('');\n\tconst [fieldErrors, setFieldsErrors] = useState({\n\t\tname: '',\n\t\tdisplay_name: '',\n\t\tfounding_date: '',\n\t\temployees_no: '',\n\t\tindustry: '',\n\t});\n\n\tuseEffect(() => {\n\t\tgetAllUsers()\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe({\n\t\t\t\tnext: data => {\n\t\t\t\t\tsetCompanyUsers([...(data ?? [])]);\n\t\t\t\t},\n\t\t\t\terror: error => {\n\t\t\t\t\tsetUsers_ApiError(error.data);\n\t\t\t\t},\n\t\t\t\tcomplete: () => {},\n\t\t\t});\n\t}, []);\n\tconst isInvalidPayload = useCallback(() => {\n\t\tsetFieldsErrors({ name: '', display_name: '', founding_date: '', employees_no: '', industry: '', misc_info: '' });\n\t\tlet isInvalid = false;\n\n\t\tif (companyData?.name?.length < 2) {\n\t\t\tsetFieldsErrors(c => ({ ...c, name: 'Company name must have at least 2 characters' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.display_name?.length < 2) {\n\t\t\tsetFieldsErrors(c => ({ ...c, display_name: 'Company display name must have at least 2 characters' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (moment(companyData.founding_date, 'YYYY-MM-DD').diff(moment().format('YYYY-MM-DD')) > 0) {\n\t\t\tsetFieldsErrors(c => ({ ...c, founding_date: \"Company's founding date is not a valid date\" }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.employees_no?.toString().length < 3 || !numberOfEmployees.some(i => i.value === companyData.employees_no)) {\n\t\t\tsetFieldsErrors(c => ({ ...c, employees_no: `Employees' number is not valid. \\nStored value (${companyData?.employees_no}) is not matching any selectable range` }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.industry?.length < 3 || !industryFields?.some(i => i.label == companyData.industry)) {\n\t\t\tsetFieldsErrors(c => ({ ...c, industry: 'Industry field entry is not valid' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.name?.length > 0) {\n\t\t\tif (name?.length > 0) {\n\t\t\t\tsetContinueDisabled(false);\n\t\t\t} else {\n\t\t\t\tsetContinueDisabled(true);\n\t\t\t}\n\t\t}\n\t\treturn isInvalid;\n\t}, [companyData, founding_date, employees_no, industry, elementsTouched]);\n\n\tuseEffect(() => {\n\t\telementsTouched.industry && isInvalidPayload();\n\t}, [companyData, position]);\n\n\tconst updateCompanyData = companyPayload => {\n\t\tsetCompanyDetails(companyPayload)\n\t\t\t.pipe(first())\n\t\t\t.subscribe({\n\t\t\t\terror: error => {\n\t\t\t\t\tconst foundErrors = { name: '', display_name: '', founding_date: '', employees_no: '', industry: '' };\n\t\t\t\t\tif (error.data.errors.name) {\n\t\t\t\t\t\tfoundErrors.name = error.data.errors.name[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.display_name) {\n\t\t\t\t\t\tfoundErrors.display_name = error.data.errors.display_name[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.founding_date) {\n\t\t\t\t\t\tfoundErrors.founding_date = error.data.errors.founding_date[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.employees_no) {\n\t\t\t\t\t\tfoundErrors.employees_no = error.data.errors.employees_no[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.industry) {\n\t\t\t\t\t\tfoundErrors.industry = error.data.errors.industry[0];\n\t\t\t\t\t}\n\t\t\t\t\tsetFieldsErrors(c => ({ ...c, ...foundErrors }));\n\t\t\t\t},\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div id=\"company-settings\" className={cls.host}>\n\t\t\t<CompanyDataUpdate datePickerRC feValidation={{ ...fieldErrors }} sendCompanyDetails={updateCompanyData} setElementsTouched={setElementsTouched} />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = store => {\n\tconst {\n\t\tauthenticatedUser: { position },\n\t} = store.authReducer;\n\tconst { companyData, companyPositionsArray, companyUsersArray } = store.flowReducer;\n\treturn { companyData, companyPositionsArray, position, companyUsersArray };\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonSetCompanyDataField: field => dispatch(setCompanyData(field)),\n\t\tonSetAuthenticatedUserPosition: position => dispatch(setAuthenticatedUser(position)),\n\t\tonTutorialModalOpen: options => dispatch(tutorialModalOpen(options)),\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanySettings);\n"],"names":["connect","store","authenticatedUser","position","authReducer","companyData","companyPositionsArray","companyUsersArray","flowReducer","dispatch","onSetCompanyDataField","field","setCompanyData","onSetAuthenticatedUserPosition","setAuthenticatedUser","onTutorialModalOpen","options","tutorialModalOpen","props","_companyUsersArray$ma","_companyData$name","_companyData$display_","setContinueDisabled","useState","setCompanyUsers","map","i","_i$positions","id","first_name","last_name","email","concat","positions","u","name","join","is_admin","photo","timezone","founding_date","employees_no","industry","elementsTouched","setElementsTouched","length","display_name","moment","diff","format","numberOfEmployees","value","industryFields","label","setUsers_ApiError","fieldErrors","setFieldsErrors","useEffect","getAllUsers","pipe","take","subscribe","next","data","error","complete","isInvalidPayload","useCallback","_companyData$name2","_companyData$display_2","_companyData$employee","_companyData$industry","_companyData$name3","misc_info","isInvalid","c","_objectSpread","toString","React","className","cls","CompanyDataUpdate","datePickerRC","feValidation","sendCompanyDetails","companyPayload","setCompanyDetails","first","foundErrors","errors"],"sourceRoot":""}