{"version":3,"file":"static/js/193.32056c6e.chunk.js","mappings":"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","sources":["webpack://flowhero/./src/appFiles/components/TopBar/CompanySettings/CompanySettings.module.scss?c634","appFiles/components/TopBar/CompanySettings/CompanySettings.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"host\":\"CompanySettings_host__BUW5K\",\"labeledContainerLabel\":\"CompanySettings_labeledContainerLabel__-BJE5\",\"label\":\"CompanySettings_label__KJjqm\",\"userslistContainer\":\"CompanySettings_userslistContainer__AeiAs\",\"companyEmployeesContainer\":\"CompanySettings_companyEmployeesContainer__QBao2\"};","import moment from 'moment';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { first } from 'rxjs/operators';\nimport 'react-tabs/style/react-tabs.css';\nimport { take } from 'rxjs/operators';\nimport { setAuthenticatedUser } from '../../../reduxStore/actions/authActions';\nimport { setCompanyData } from '../../../reduxStore/actions/flowActions';\nimport { tutorialModalOpen } from '../../../reduxStore/actions/modalsActions';\nimport { getAllUsers } from '../../../services/user.service';\nimport { setCompanyDetails } from '../../../services/company.service';\nimport { industryFields, numberOfEmployees } from '../../../shared/utility';\nimport { CompanyDataUpdate } from '../../common';\n\nimport cls from './CompanySettings.module.scss';\n\nfunction CompanySettings(props) {\n\tconst { companyUsersArray, companyData, position } = props;\n\tconst [, setContinueDisabled] = useState(true);\n\tconst [, setCompanyUsers] = useState([\n\t\t...(companyUsersArray.map(i => ({\n\t\t\tid: i.id,\n\t\t\tfirst_name: i.first_name,\n\t\t\tlast_name: i.last_name,\n\t\t\temail: i.email,\n\t\t\tposition: `${i.positions?.map(u => u.name).join(', ')}`,\n\t\t\tis_admin: i.is_admin,\n\t\t\tphoto: i.photo,\n\t\t\ttimezone: i.timezone,\n\t\t})) ?? []),\n\t]);\n\tconst { name, founding_date, employees_no, industry } = companyData;\n\tconst [elementsTouched, setElementsTouched] = useState({\n\t\tname: companyData?.name?.length > 2,\n\t\tdisplay_name: companyData?.display_name?.length > 2,\n\t\tfounding_date: moment(companyData.founding_date, 'YYYY-MM-DD').diff(moment().format('YYYY-MM-DD')) < 0,\n\t\temployees_no: numberOfEmployees.some(i => i.value === companyData.employees_no),\n\t\tindustry: industryFields?.some(i => i.label == companyData.industry),\n\t});\n\n\tconst [setUsers_ApiError] = useState('');\n\tconst [fieldErrors, setFieldsErrors] = useState({\n\t\tname: '',\n\t\tdisplay_name: '',\n\t\tfounding_date: '',\n\t\temployees_no: '',\n\t\tindustry: '',\n\t});\n\n\tuseEffect(() => {\n\t\tgetAllUsers()\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe({\n\t\t\t\tnext: data => {\n\t\t\t\t\tsetCompanyUsers([...(data ?? [])]);\n\t\t\t\t},\n\t\t\t\terror: error => {\n\t\t\t\t\tsetUsers_ApiError(error.data);\n\t\t\t\t},\n\t\t\t\tcomplete: () => {},\n\t\t\t});\n\t}, []);\n\tconst isInvalidPayload = useCallback(() => {\n\t\tsetFieldsErrors({ name: '', display_name: '', founding_date: '', employees_no: '', industry: '', misc_info: '' });\n\t\tlet isInvalid = false;\n\n\t\tif (companyData?.name?.length < 2) {\n\t\t\tsetFieldsErrors(c => ({ ...c, name: 'Company name must have at least 2 characters' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.display_name?.length < 2) {\n\t\t\tsetFieldsErrors(c => ({ ...c, display_name: 'Company display name must have at least 2 characters' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (moment(companyData.founding_date, 'YYYY-MM-DD').diff(moment().format('YYYY-MM-DD')) > 0) {\n\t\t\tsetFieldsErrors(c => ({ ...c, founding_date: \"Company's founding date is not a valid date\" }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.employees_no?.toString().length < 3 || !numberOfEmployees.some(i => i.value === companyData.employees_no)) {\n\t\t\tsetFieldsErrors(c => ({ ...c, employees_no: `Employees' number is not valid. \\nStored value (${companyData?.employees_no}) is not matching any selectable range` }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.industry?.length < 3 || !industryFields?.some(i => i.label == companyData.industry)) {\n\t\t\tsetFieldsErrors(c => ({ ...c, industry: 'Industry field entry is not valid' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.name?.length > 0) {\n\t\t\tif (name?.length > 0) {\n\t\t\t\tsetContinueDisabled(false);\n\t\t\t} else {\n\t\t\t\tsetContinueDisabled(true);\n\t\t\t}\n\t\t}\n\t\treturn isInvalid;\n\t}, [companyData, founding_date, employees_no, industry, elementsTouched]);\n\n\tuseEffect(() => {\n\t\telementsTouched.industry && isInvalidPayload();\n\t}, [companyData, position]);\n\n\tconst updateCompanyData = companyPayload => {\n\t\tsetCompanyDetails(companyPayload)\n\t\t\t.pipe(first())\n\t\t\t.subscribe({\n\t\t\t\terror: error => {\n\t\t\t\t\tconst foundErrors = { name: '', display_name: '', founding_date: '', employees_no: '', industry: '' };\n\t\t\t\t\tif (error.data.errors.name) {\n\t\t\t\t\t\tfoundErrors.name = error.data.errors.name[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.display_name) {\n\t\t\t\t\t\tfoundErrors.display_name = error.data.errors.display_name[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.founding_date) {\n\t\t\t\t\t\tfoundErrors.founding_date = error.data.errors.founding_date[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.employees_no) {\n\t\t\t\t\t\tfoundErrors.employees_no = error.data.errors.employees_no[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.industry) {\n\t\t\t\t\t\tfoundErrors.industry = error.data.errors.industry[0];\n\t\t\t\t\t}\n\t\t\t\t\tsetFieldsErrors(c => ({ ...c, ...foundErrors }));\n\t\t\t\t},\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div id=\"company-settings\" className={cls.host}>\n\t\t\t<CompanyDataUpdate datePickerRC feValidation={{ ...fieldErrors }} sendCompanyDetails={updateCompanyData} setElementsTouched={setElementsTouched} />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = store => {\n\tconst {\n\t\tauthenticatedUser: { position },\n\t} = store.authReducer;\n\tconst { companyData, companyPositionsArray, companyUsersArray } = store.flowReducer;\n\treturn { companyData, companyPositionsArray, position, companyUsersArray };\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonSetCompanyDataField: field => dispatch(setCompanyData(field)),\n\t\tonSetAuthenticatedUserPosition: position => dispatch(setAuthenticatedUser(position)),\n\t\tonTutorialModalOpen: options => dispatch(tutorialModalOpen(options)),\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanySettings);\n"],"names":["connect","store","position","authReducer","authenticatedUser","flowReducer","companyData","companyPositionsArray","companyUsersArray","dispatch","onSetCompanyDataField","field","setCompanyData","onSetAuthenticatedUserPosition","setAuthenticatedUser","onTutorialModalOpen","options","tutorialModalOpen","props","useState","setContinueDisabled","map","i","id","first_name","last_name","email","positions","u","name","join","is_admin","photo","timezone","setCompanyUsers","founding_date","employees_no","industry","length","display_name","moment","diff","format","numberOfEmployees","value","industryFields","label","elementsTouched","setElementsTouched","setUsers_ApiError","fieldErrors","setFieldsErrors","useEffect","getAllUsers","pipe","take","subscribe","next","data","error","complete","isInvalidPayload","useCallback","misc_info","isInvalid","c","toString","className","cls","datePickerRC","feValidation","sendCompanyDetails","companyPayload","setCompanyDetails","first","foundErrors","errors"],"sourceRoot":""}