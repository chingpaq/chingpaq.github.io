{"version":3,"file":"static/js/854.b5d2e8c0.chunk.js","mappings":"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","sources":["webpack://flowhero/./src/appFiles/components/Auth/Login.module.scss?947f","appFiles/hooks/useValidation.ts","webpack://flowhero/./src/appFiles/components/Auth/LoginForm/FormElements/TextField.module.scss?eba6","appFiles/components/Auth/LoginForm/FormElements/TextField.tsx","appFiles/components/Auth/LoginForm/FormElements/PasswordTextField.tsx","webpack://flowhero/./src/appFiles/components/Auth/LoginForm/LoginForm.module.scss?71be","appFiles/components/Auth/LoginForm/LoginForm.tsx","appFiles/components/Auth/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"host\":\"Login_host__HJ5T9\",\"firstContainer\":\"Login_firstContainer__kfGLU\",\"headerTopBarContainer\":\"Login_headerTopBarContainer__QWz8Y\",\"firstContainerContent\":\"Login_firstContainerContent__wbbdK\",\"logoWrapper\":\"Login_logoWrapper__xOqDN\",\"processmakerLogo\":\"Login_processmakerLogo__DGHzj\",\"header2\":\"Login_header2__tfUwR\",\"recoverPasswordButton\":\"Login_recoverPasswordButton__FUuDW\",\"secondContainer\":\"Login_secondContainer__BFYgV\",\"bottomButtonsContainer\":\"Login_bottomButtonsContainer__7NrxO\",\"headerTopBar\":\"Login_headerTopBar__RSolU\",\"logoUrlImg\":\"Login_logoUrlImg__UaUon\",\"centerDiv\":\"Login_centerDiv__le4iU\",\"logoUrlImgMobile\":\"Login_logoUrlImgMobile__gvaUr\",\"navbaritems\":\"Login_navbaritems__g7mXs\",\"navbarlinks\":\"Login_navbarlinks__dLaYR\"};","import * as yup from 'yup';\nimport yupPassword from 'yup-password';\nimport { useMemo } from 'react';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\n\nyupPassword(yup);\nconst regSpecial = /[^A-Za-z0-9]/;\nconst regLower = /[a-z]/;\nconst regUpper = /[A-Z]/;\nconst regNumber = /[0-9]/;\nexport const allRegs: RegExp[] = [regSpecial, regLower, regUpper, regNumber];\n\nexport const useValidation = () => {\n\treturn useMemo(() => {\n\t\treturn {\n\t\t\tyup,\n\t\t\tschemas: {\n\t\t\t\temail: yup.string().min(6, 'Username must have at least 8 characters'),\n\t\t\t\tpassword: yup.string().min(8, 'Password must have at least 8 characters'),\n\t\t\t\t\n\t\t\t\tpasswordRepeat: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.oneOf([yup.ref('password'), null], 'Passwords does not match')\n\t\t\t\t\t.required('Password repeat is required'),\n\t\t\t\twebsite: yup.string().url(),\n\t\t\t\tphoneNumber: yup.string().test({\n\t\t\t\t\tname: 'phone-pattern',\n\t\t\t\t\tmessage: 'Not a valid phone number',\n\t\t\t\t\ttest: (value = '') => value == '' || isValidPhoneNumber(value),\n\t\t\t\t}),\n\t\t\t\tmobilePhoneNumber: yup.string().test({\n\t\t\t\t\tname: 'mobile-phone-pattern',\n\t\t\t\t\tmessage: 'Not a valid mobile phone number',\n\t\t\t\t\ttest: (value = '') => value == '' || isValidPhoneNumber(value),\n\t\t\t\t}),\n\t\t\t\temployerName: yup.string().required('Employer name is required'),\n\t\t\t},\n\t\t};\n\t}, []);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"TextField_inputContainer__-Li1l\",\"ornament\":\"TextField_ornament__1DMyr\",\"rightButton\":\"TextField_rightButton__miccv\",\"textInput\":\"TextField_textInput__TQ2mO\",\"userTextInput\":\"TextField_userTextInput__8z5C4\",\"inputLabel\":\"TextField_inputLabel__IAwPE\",\"errorContainer\":\"TextField_errorContainer__D-YWL\"};","import classNames from 'classnames';\nimport React, { ChangeEventHandler, ComponentProps, forwardRef, ReactNode, useState } from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport cls from './TextField.module.scss';\n\nexport type TextFieldProps = {\n\t/** Label of the input field */\n\tlabel?: string;\n\t/** Check if the field is mandatory or not */\n\thasMandatoryIndicator?: boolean;\n\t/** The text shown within the input field, in the default state */\n\tplaceholder?: string;\n\t/** Number of characters allowed */\n\tcharactersNo?: number;\n\t/** The icon type used for the input field*/\n\ticon?: ReactNode;\n\t/**  Right button for features as show/hide  */\n\trightButtonLabel?: any;\n\trightButtonAction?: () => void;\n\trightButtonClass?: string;\n\t/** Error message */\n\terrorMessage?: string;\n\t/** It is shown below the input field or\n\t * below the error message (if applicable ) */\n\thelpText?: string;\n\ttype?: ComponentProps<'input'>['type'];\n\tisDisabled?: ComponentProps<'input'>['disabled'];\n\treadOnly?: ComponentProps<'input'>['readOnly'];\n\tdefaultValue?: string;\n\tautoComplete?: string;\n} & ComponentProps<'div'> &\n\tPartial<UseFormRegisterReturn>;\n\n/**\n * Text fields allow users to enter text into a UI.\n * They typically appear in create processes or dialogues.\n */\nconst TextField = forwardRef<HTMLInputElement, TextFieldProps>((props, ref) => {\n\tconst { isDisabled = false, readOnly, label = '', hasMandatoryIndicator, placeholder = 'Insert email', charactersNo, icon, rightButtonLabel, rightButtonAction, rightButtonClass, errorMessage, defaultValue, onChange, name, type = 'text', autoComplete, ...rest } = props;\n\tconst [inputValue, setInputValue] = useState(defaultValue ?? '');\n\tconst hasError = Boolean(errorMessage);\n\n\tconst handleChange: ChangeEventHandler<HTMLInputElement> = event => {\n\t\tsetInputValue(event.target.value);\n\t\tonChange?.(event);\n\t};\n\n\treturn (\n\t\t<div {...rest}>\n\t\t\t<Label hasMandatoryIndicator={hasMandatoryIndicator}>{label}</Label>\n\t\t\t<InputContainer hasError={hasError} className={cls.inputContainer}>\n\t\t\t\t<Input\n\t\t\t\t\tapp-readonly={readOnly ? 'readonly' : ''}\n\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\tautoComplete={autoComplete}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\tname={name}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tmaxLength={charactersNo}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tref={ref}\n\t\t\t\t\tclassName={cls.textInput}\n\t\t\t\t/>\n\t\t\t\t{icon && <div className={cls.ornament}>{icon}</div>}\n\t\t\t\t{rightButtonLabel && (\n\t\t\t\t\t<button type={'button'} onClick={rightButtonAction} className={classNames(cls.rightButton, rightButtonClass)}>\n\t\t\t\t\t\t{rightButtonLabel}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</InputContainer>\n\n\t\t\t{errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n\t\t</div>\n\t);\n});\n\nexport const UserTextField = forwardRef<HTMLInputElement, TextFieldProps>((props, ref) => {\n\tconst { isDisabled = false, readOnly, label = '', hasMandatoryIndicator, placeholder = 'Insert email', charactersNo, icon, rightButtonLabel, rightButtonAction, rightButtonClass, errorMessage, defaultValue, onChange, name, type = 'text', autoComplete, ...rest } = props;\n\tconst [inputValue, setInputValue] = useState(defaultValue ?? '');\n\tconst hasError = Boolean(errorMessage);\n\n\tconst handleChange: ChangeEventHandler<HTMLInputElement> = event => {\n\t\tsetInputValue(event.target.value);\n\t\tonChange?.(event);\n\t};\n\n\treturn (\n\t\t<div {...rest}>\n\t\t\t<Label hasMandatoryIndicator={hasMandatoryIndicator}>{label}</Label>\n\t\t\t<InputContainer hasError={hasError} className={cls.inputContainer}>\n\t\t\t\t<Input\n\t\t\t\t\tapp-readonly={readOnly ? 'readonly' : ''}\n\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\tautoComplete={autoComplete}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\tname={name}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tmaxLength={charactersNo}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tref={ref}\n\t\t\t\t\tclassName={cls.userTextInput}\n\t\t\t\t/>\n\t\t\t\t{icon && <div className={cls.ornament}>{icon}</div>}\n\t\t\t\t{rightButtonLabel && (\n\t\t\t\t\t<button type={'button'} onClick={rightButtonAction} className={classNames(cls.rightButton, rightButtonClass)} style={{fontFamily: 'Montserrat', fontSize:'14px', fontWeight:'normal'}}>\n\t\t\t\t\t\t{rightButtonLabel}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</InputContainer>\n\n\t\t\t{errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n\t\t</div>\n\t);\n});\nexport const InputContainer = forwardRef<HTMLDivElement, { hasError: boolean } & ComponentProps<'div'>>((props, ref) => {\n\tconst { className, hasError, ...rest } = props;\n\treturn <div app-error={hasError ? 'error' : ''} ref={ref} {...rest} className={classNames(cls.inputContainer, className)} />;\n});\n\n/**\n * Input contol with applied styling to be used **as inside of `InputContainer`**\n * Uses less bottom margin when active to balance the stronger `border` of the `InputContiner`\n */\nexport const Input = forwardRef<HTMLInputElement, ComponentProps<'input'>>((props, ref) => {\n\tconst { className, ...rest } = props;\n\treturn <input ref={ref} {...rest} className={classNames(cls.textInput, className)} />;\n});\nexport function ErrorMessage(props: ComponentProps<'p'>) {\n\tconst { children, ...rest } = props;\n\treturn (\n\t\t<p className={cls.errorContainer} {...rest}>\n\t\t\t{children}\n\t\t</p>\n\t);\n}\ntype LabelProps = {\n\t/** adds a \"*\"-Indicator to the end of the title that turns red in case of an error */\n\thasMandatoryIndicator?: boolean;\n} & ComponentProps<'label'>;\n\n/**\n * displayed above an `input` control.\n */\nexport function Label(props: LabelProps) {\n\tconst { hasMandatoryIndicator, children, className, ...rest } = props;\n\treturn (\n\t\t<label className={classNames(cls.inputLabel, className)} {...rest}>\n\t\t\t{children}\n\t\t\t{hasMandatoryIndicator && <span className=\"text-danger\">*</span>}\n\t\t</label>\n\t);\n}\nexport default TextField;\n","import { ComponentProps, forwardRef, useState } from 'react';\nimport TextField, { UserTextField } from './TextField';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\ntype PasswordTextFieldProps = Omit<ComponentProps<typeof TextField>, 'icon' | 'type'>;\n\n/**\n * Same as `TextField` Component but with special password related features.\n * Shows an Icon at the end of the input to toggle if password is hidden or not.\n * @returns\n */\nconst PasswordTextField = forwardRef<HTMLInputElement, PasswordTextFieldProps>((props, ref) => {\n\tconst [showPassword, setShowPassword] = useState(false);\n\n\treturn <UserTextField {...props} ref={ref} type={showPassword ? 'text' : 'password'} rightButtonLabel={showPassword ? <FontAwesomeIcon icon={faEye} style={{color:'black',  width: '16px', height: '16px' }} /> : <FontAwesomeIcon icon={faEyeSlash} style={{color:'var(--app-color-gray-light)',  width: '16px', height: '16px' }} />} rightButtonAction={() => setShowPassword(c => !c)} rightButtonClass={''} />;\n});\n\nexport default PasswordTextField;\n","// extracted by mini-css-extract-plugin\nexport default {\"host\":\"LoginForm_host__UvJwq\",\"title\":\"LoginForm_title__9p60B\",\"text\":\"LoginForm_text__yMnPH\",\"row\":\"LoginForm_row__9D3he\",\"buttons\":\"LoginForm_buttons__spuMH\",\"checkbox\":\"LoginForm_checkbox__d1y1-\",\"checkboxLabel\":\"LoginForm_checkboxLabel__vx8px\",\"signInButton\":\"LoginForm_signInButton__VPwbB\",\"errorMessage\":\"LoginForm_errorMessage__vGOop\",\"recoverPasswordButton\":\"LoginForm_recoverPasswordButton__fDOss\",\"recoverPassword\":\"LoginForm_recoverPassword__Cwkby\"};","\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport React, { ComponentProps, memo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { first, take } from 'rxjs/operators';\nimport { useValidation } from '../../../hooks/useValidation';\nimport { setOnBoardingComplete, setShowMenu } from '../../../reduxStore/actions/flowActions';\nimport { setIsOnboarding, setOnBoardingModalsVisibility, setOnBoardingVisible } from '../../../reduxStore/actions/modalsActions';\nimport type { StoreType } from '../../../reduxStore/store';\nimport { userLogin } from '../../../services/auth.service';\nimport { Button } from '../../common';\nimport { Checkbox } from './FormElements/Checkbox';\nimport PasswordTextField from './FormElements/PasswordTextField';\nimport TextField, { ErrorMessage, UserTextField } from './FormElements/TextField';\nimport cls from './LoginForm.module.scss';\nimport { isMobile } from 'react-device-detect';\nimport { APP_NAME } from '../../../shared/utility';\n\nconst accessRestrictedMessage = `This company do not have onboard required data yet!\\nPlease contact comapny admin.\\nBasic company information must be enroled\\nBefore you will be granted access to ${APP_NAME}`;\ntype FormType = {\n\temail: string;\n\tpassword: string;\n\trememberMe?: boolean;\n};\n\nexport type LoginFormProps = {\n\tclassName: string;\n\tonLoginSuccess?: (data:any) => void;\n\tonResetPassword?: () => void;\n} & ComponentProps<'form'>;\n\nexport const LoginForm = memo((props: LoginFormProps) => {\n\tconst { onLoginSuccess, className, onResetPassword } = props;\n\tconst dispatch = useDispatch();\n\tconst { rememberMe } = useSelector((reduxStore: StoreType) => reduxStore.authReducer.sessionSettings);\n\tconst [loading, setLoading] = useState(false);\n\tconst [responseError, setResponseError] = useState('');\n\tconst { schemas, yup } = useValidation();\n\tconst {\n\t\tregister,\n\t\t\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t\tgetValues,\n\t} = useForm<FormType>({\n\t\tmode: 'onSubmit',\n\t\tcriteriaMode: 'firstError',\n\t\tresolver: yupResolver(\n\t\t\tyup.object().shape({\n\t\t\t\temail: schemas.email,\n\t\t\t\tpassword: schemas.password,\n\t\t\t})\n\t\t),\n\t});\n\n\tconst onSubmit = (_data: FormType) => {\n\t\tsetResponseError('');\n\t\tsetLoading(true);\n\t\tconst { email, password, rememberMe } = getValues();\n\t\tuserLogin({ email: email, password: password, rememberMe: rememberMe })\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe({\n\t\t\t\tnext: data => {\n\t\t\t\t\tconst { is_admin, onboarding_status } = data;\n\n\t\t\t\t\tif (onboarding_status === false) {\n\t\t\t\t\t\tif (is_admin === true) {\n\t\t\t\t\t\t\tdispatch(setOnBoardingVisible(true));\n\t\t\t\t\t\t\tdispatch(setIsOnboarding(true));\n\t\t\t\t\t\t\tdispatch(setOnBoardingModalsVisibility({ firstModalVisible: true }));\n\t\t\t\t\t\t\tdispatch(setShowMenu(false));\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetResponseError(accessRestrictedMessage);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(setOnBoardingVisible(false));\n\t\t\t\t\t\tdispatch(setIsOnboarding(false));\n\t\t\t\t\t\tdispatch(setOnBoardingComplete(true));\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tonLoginSuccess?.(data);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: error => {\n\t\t\t\t\tconst extractedError = typeof error.data == 'string' ? error.data : error?.error ? error?.error : error?.data?.message;\n\t\t\t\t\tsetResponseError((error.status === 422 || extractedError === 'Not authenticated') ? 'Invalid user name or password, please try again.': extractedError );\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t},\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)} className={classNames(cls.host, className)} onClick={()=>setResponseError('')}>\n\t\t\t<div className={cls.row} app-variant=\"first-row\">\n\t\t\t\t<UserTextField autoComplete={rememberMe ? 'username' : 'new-password'} type=\"text\" placeholder={'Email or Username'} defaultValue={localStorage.getItem('username') ?? ''} {...register('email')}  />\n\t\t\t</div>\n\t\t\t<div className={cls.row} app-variant=\"second-row\">\n\t\t\t\t<PasswordTextField  autoComplete={rememberMe ? 'on' : 'off'} placeholder={'Password'} defaultValue={localStorage.getItem('password') ?? ''} {...register('password')}  />\n\t\t\t</div>\n\t\t\t{(responseError || errors.password?.message || errors.email?.message) && <ErrorMessage>{`${responseError ?? ''} ${errors.password?.message ?? ''} ${errors.email?.message ?? ''} `}</ErrorMessage>}\n\t\t\t<Button\n\t\t\t\tdisabled={loading}\n\t\t\t\tloading={loading}\n\t\t\t\ttype={'submit'}\n\t\t\t\ttitle={'Sign in'}\n\t\t\t\tclassName={cls.signInButton}\n\t\t\t/>\n\t\t\t<div className={cls.row} app-variant=\"third-row\">\t\t\t\t\n\t\t\t\t<Checkbox defaultChecked={rememberMe} checkboxLabel={'Remember me'} {...register('rememberMe')} />\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t<p className={cls.recoverPasswordButton} onClick={onResetPassword}>{isMobile ? 'Forgot Password':'Need to find your password?'}</p>\n\t\t\t\t<br/>\n\t\t\t</div>\t\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t</form>\n\t);\n});\n","import { useEffect, memo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { restartAxiosAbort, setOnBoardingComplete } from '../../reduxStore/actions/flowActions';\nimport cls from './Login.module.scss';\nimport { LoginForm } from './LoginForm/LoginForm';\nimport { isMobile } from 'react-device-detect';\nimport { resetApplication } from '../../services/auth.service';\nimport { getMasterData, getMobileData } from '../../services/master.service';\nimport { store } from '../../reduxStore/store';\nimport { APP_NAME, FLOWHERO } from '../../shared/utility';\n\nconst Login = memo(props => {\n\tconst { title } = props;\n\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\tconst { companyData, lastUpdates } = store.getState().flowReducer;\n\tconst { authenticated } = store.getState().sessionReducer;\n\tconst [company,] = useState(JSON.parse(localStorage.getItem('companyData')) ?? { 'logo': '' });\n\tdocument.title = `Login | ${APP_NAME}`;\n\n\tuseEffect(() => {\n\t\tif (authenticated) {\n\t\t\tnavigate('/flowhero');\n\t\t} else {\n\t\t\tdispatch(setOnBoardingComplete(false));\n\t\t\tdispatch(restartAxiosAbort())\n\t\t\tresetApplication();\n\t\t}\n\n\n\t}, []);\n\n\treturn authenticated == false ? (\n\t\t<div style={{ display: 'flex', flexDirection: 'row', width: '100%', height: '98vh' }}>\n\t\t\t<div style={{ width: isMobile ? '100%' : '20%', padding: '20px', minWidth: '300px' }}>\n\n\t\t\t\t<div className={cls.headerTopBarContainer} style={{ fontSize: isMobile ? '12px' : '16px', marginTop: '20px' }} onClick={() => navigate('/flowhero')}>\n\t\t\t\t\t{!company?.logo && <p>{company?.display_name?.toUpperCase()}</p>}\n\t\t\t\t\t{company?.logo ?\n\t\t\t\t\t\t<img alt=\"lg\" src={company?.logo} className={isMobile ? cls.logoUrlImgMobile : cls.logoUrlImg} />\n\t\t\t\t\t\t:\n\t\t\t\t\t\tisMobile ? FLOWHERO('30px', 'var(--app-color-gray-dark)', 'bold') :\n\t\t\t\t\t\t\tFLOWHERO('32px', 'var(--app-color-gray-dark)', 'bold')}\n\t\t\t\t</div>\n\t\t\t\t<LoginForm\n\t\t\t\t\tonLoginSuccess={data => {\n\t\t\t\t\t\tconst { isSingleApp } = data;\n\n\t\t\t\t\t\tlastUpdates.componentsByModule = {};\n\n\t\t\t\t\t\tif (!(companyData?.status === 'trial_ended' || companyData?.status === 'inactive')) {\n\t\t\t\t\t\t\tif (isSingleApp === true && isMobile) {\n\t\t\t\t\t\t\t\tgetMobileData();\n\t\t\t\t\t\t\t\tnavigate('/mobile');\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgetMasterData();\n\t\t\t\t\t\t\t\t// getMobileData();\n\t\t\t\t\t\t\t\t// navigate('/mobile');\n\t\t\t\t\t\t\t\t// return;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (companyData?.status === 'inactive') {\n\t\t\t\t\t\t\tgetMasterData(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// navigate('/login');\n\t\t\t\t\t\t\t// return;\n\t\t\t\t\t\t\tgetMasterData();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnavigate('/');\n\t\t\t\t\t}}\n\t\t\t\t\tonResetPassword={() => navigate('/reset-password')}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t\n\t\t\t<div style={{ width: '80%', display: isMobile ? 'none' : 'flex', backgroundColor: 'rgb(246,244,236)', justifyContent: 'flex-end', padding: '20px', height: '102vh'  }} >\n\t\t\t\t<ul className={cls.navbaritems} style={{ display: isMobile ? 'none' : '', marginRight: '20px' }}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href= {company?.slug ? `#/pages/home/${company?.slug}`: \"#/flowhero/\"} className={cls.navbarlinks}>\n\t\t\t\t\t\t\t{`HOME`}\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/\" className={cls.navbarlinks}>\n\t\t\t\t\t\t\t{`CONTACT US`}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/legal\" className={cls.navbarlinks}>\n\t\t\t\t\t\t\t{`PRIVACY`}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\n\n\n\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<div style={{ margin: 'auto', width: '100%', height: '500px', display: 'flex', alignContent: 'center', alignItems: 'center', justifyItems: 'center', justifyContent: 'center' }}>{FLOWHERO('30px', 'var(--app-color-gray-dark)',  'bold')}</div>\n\t);\n});\n\nexport default Login;\n"],"names":["yupPassword","yup","UserTextField","forwardRef","props","ref","_props$isDisabled2","isDisabled","readOnly","_props$label2","label","hasMandatoryIndicator","_props$placeholder2","placeholder","charactersNo","icon","rightButtonLabel","rightButtonAction","rightButtonClass","errorMessage","defaultValue","onChange","name","_props$type2","type","autoComplete","rest","_objectWithoutProperties","_excluded2","_useState3","useState","_useState4","_slicedToArray","inputValue","setInputValue","hasError","Boolean","React","Label","InputContainer","className","cls","Input","disabled","value","maxLength","event","target","onClick","classNames","style","fontFamily","fontSize","fontWeight","ErrorMessage","_excluded3","_extends","_excluded4","children","_excluded5","_excluded6","_useState","_useState2","showPassword","setShowPassword","createElement","FontAwesomeIcon","faEye","color","width","height","faEyeSlash","c","accessRestrictedMessage","concat","APP_NAME","LoginForm","memo","_localStorage$getItem","_localStorage$getItem2","_errors$password","_errors$email","_errors$password$mess","_errors$password2","_errors$email$message","_errors$email2","onLoginSuccess","onResetPassword","dispatch","useDispatch","rememberMe","useSelector","reduxStore","authReducer","sessionSettings","loading","setLoading","responseError","setResponseError","_useValidation","useMemo","schemas","email","min","password","passwordRepeat","oneOf","required","website","url","phoneNumber","test","message","arguments","length","undefined","isValidPhoneNumber","mobilePhoneNumber","employerName","_useForm","useForm","mode","criteriaMode","resolver","yupResolver","object","shape","register","handleSubmit","errors","formState","getValues","onSubmit","_data","_getValues","userLogin","pipe","take","subscribe","next","data","is_admin","onboarding_status","setOnBoardingVisible","setIsOnboarding","setOnBoardingModalsVisibility","firstModalVisible","setShowMenu","setOnBoardingComplete","error","_error$data","extractedError","status","localStorage","getItem","PasswordTextField","Button","title","Checkbox","defaultChecked","checkboxLabel","isMobile","_JSON$parse","_company$display_name","navigate","useNavigate","_store$getState$flowR","store","flowReducer","companyData","lastUpdates","authenticated","sessionReducer","JSON","parse","company","document","useEffect","restartAxiosAbort","resetApplication","display","flexDirection","padding","minWidth","marginTop","logo","display_name","toUpperCase","alt","src","FLOWHERO","isSingleApp","componentsByModule","getMobileData","getMasterData","backgroundColor","justifyContent","marginRight","href","slug","margin","alignContent","alignItems","justifyItems"],"sourceRoot":""}