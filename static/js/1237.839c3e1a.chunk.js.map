{"version":3,"file":"static/js/1237.839c3e1a.chunk.js","mappings":"uKAqGA,QAhGA,YACCA,EAAAA,EAAAA,WAAU,KACTC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,aAGrC,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,YAC5CK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,KAChDO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,YAC5CS,EAAaC,IAAkBV,EAAAA,EAAAA,WAAS,IACxCW,EAAYC,IAAiBZ,EAAAA,EAAAA,UAAS,CAAC,GA2C9C,OACCa,EAAAA,cAAA,OAAKC,UAAU,2BAA2BC,MAAO,CAAEC,WAAY,mCAAoCC,QAAS,SAC3GJ,EAAAA,cAACK,EAAAA,GAAI,CAACC,GAAG,KAAG,QAEZN,EAAAA,cAAA,OAAKC,UAAU,iBAAiBC,MAAO,CAAEC,WAAY,mCAAoCC,QAAS,UACjGJ,EAAAA,cAAA,UACE,2BAGFA,EAAAA,cAAA,QAAMC,UAAU,eAAeM,SAlDbC,IACpBA,EAAEC,iBAGF,MAAMC,EAAS,CAAC,EACXzB,EAAY0B,OAEN1B,EAAY0B,OAAOC,OAAS,IACtCF,EAAOzB,YAAc,sCAFrByB,EAAOzB,YAAc,mBAKjBG,EAAcuB,OAERvB,EAAcuB,OAAOC,OAAS,KACxCF,EAAOtB,cAAgB,qCAFvBsB,EAAOtB,cAAgB,2BAKF,YAAlBM,IACHgB,EAAOhB,cAAgB,gCAGpBmB,OAAOC,KAAKJ,GAAQE,OAAS,EAChCb,EAAcW,IAKfxB,EAAe,IACfG,EAAiB,IACjBE,EAAiB,WACjBE,EAAmB,IACnBE,EAAiB,WACjBI,EAAc,CAAC,GAEfgB,EAAAA,GAAAA,QAAc,0BAA2B,CACxCC,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,OAAQA,IAAMpB,GAAe,GAC7BqB,QAASA,IAAMrB,GAAe,QAc5BG,EAAAA,cAAA,aAAO,aAENA,EAAAA,cAAA,SAAOmB,KAAK,OAAOC,MAAOnC,EAAaoC,SAAUb,GAAKtB,EAAesB,EAAEc,OAAOF,OAAQG,UAAQ,IAC7FzB,EAAWb,aAAee,EAAAA,cAAA,KAAGC,UAAU,iBAAiBH,EAAWb,cAGrEe,EAAAA,cAAA,WACAA,EAAAA,cAAA,aAAO,gBAENA,EAAAA,cAAA,SAAOmB,KAAK,OAAOC,MAAOhC,EAAeiC,SAAUb,GAAKnB,EAAiBmB,EAAEc,OAAOF,OAAQG,UAAQ,IACjGzB,EAAWV,eAAiBY,EAAAA,cAAA,KAAGC,UAAU,iBAAiBH,EAAWV,gBAGvEY,EAAAA,cAAA,WAGAA,EAAAA,cAAA,WAIAA,EAAAA,cAAA,KAAGC,UAAU,uBAAuBuB,KAAI,sIAAAC,OAAwIrC,EAAa,kBAAAqC,OAAiBxC,IAAe,WAC7Ne,EAAAA,cAAA,KAAGC,UAAU,kBAAkBC,MAAO,CAAEwB,QAAS9B,EAAc,QAAU,SAAU,4BAMrFI,EAAAA,cAAC2B,EAAAA,GAAc,CAACC,UAAW,IAAMC,MAAO,EAAGC,aAAa,IAG3D,EC5FA,QAJA,WACC,OAAO9B,EAAAA,cAAC+B,EAAe,KACxB,C","sources":["appFiles/components/Home/sub/AppointmentForm.js","appFiles/components/Home/Pages/Appointment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../../../styles/AppointmentForm.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nfunction AppointmentForm() {\n\tuseEffect(() => {\n\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t});\n\n\tconst [patientName, setPatientName] = useState('');\n\tconst [patientNumber, setPatientNumber] = useState('');\n\tconst [patientGender, setPatientGender] = useState('default');\n\tconst [appointmentTime, setAppointmentTime] = useState('');\n\tconst [preferredMode, setPreferredMode] = useState('default');\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [formErrors, setFormErrors] = useState({});\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\t// Validate form inputs\n\t\tconst errors = {};\n\t\tif (!patientName.trim()) {\n\t\t\terrors.patientName = 'Name is required';\n\t\t} else if (patientName.trim().length < 8) {\n\t\t\terrors.patientName = 'Name must be at least 8 characters';\n\t\t}\n\n\t\tif (!patientNumber.trim()) {\n\t\t\terrors.patientNumber = 'Phone number is required';\n\t\t} else if (patientNumber.trim().length < 10) {\n\t\t\terrors.patientNumber = 'Phone number must be of 10 digits';\n\t\t}\n\n\t\tif (preferredMode === 'default') {\n\t\t\terrors.preferredMode = 'Please select preferred mode';\n\t\t}\n\n\t\tif (Object.keys(errors).length > 0) {\n\t\t\tsetFormErrors(errors);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset form fields and errors after successful submission\n\t\tsetPatientName('');\n\t\tsetPatientNumber('');\n\t\tsetPatientGender('default');\n\t\tsetAppointmentTime('');\n\t\tsetPreferredMode('default');\n\t\tsetFormErrors({});\n\n\t\ttoast.success('Appointment Scheduled !', {\n\t\t\tposition: toast.POSITION.TOP_CENTER,\n\t\t\tonOpen: () => setIsSubmitted(true),\n\t\t\tonClose: () => setIsSubmitted(false),\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"appointment-form-section\" style={{ fontFamily: 'var(--app-text-main-font), serif', padding: '10px' }}>\n\t\t\t<Link to=\"/\">{`Home`}</Link>\n\n\t\t\t<div className=\"form-container\" style={{ fontFamily: 'var(--app-text-main-font), serif', padding: '100px' }}>\n\t\t\t\t<h2 >\n\t\t\t\t\t{'Book Online Appointment'}\n\t\t\t\t</h2>\n\n\t\t\t\t<form className=\"form-content\" onSubmit={handleSubmit}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tFull Name:\n\t\t\t\t\t\t<input type=\"text\" value={patientName} onChange={e => setPatientName(e.target.value)} required />\n\t\t\t\t\t\t{formErrors.patientName && <p className=\"error-message\">{formErrors.patientName}</p>}\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<label>\n\t\t\t\t\t\tPhone Number:\n\t\t\t\t\t\t<input type=\"text\" value={patientNumber} onChange={e => setPatientNumber(e.target.value)} required />\n\t\t\t\t\t\t{formErrors.patientNumber && <p className=\"error-message\">{formErrors.patientNumber}</p>}\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<br />\n\n\t\t\t\t\t\n\t\t\t\t\t<br />\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t<a className=\"text-appointment-btn\" href={`mailto:support@flowhero.app?subject=FlowHeroApps%20Inquiry&body=I would like to learn more from FlowHeroApps. Please contact me at ${patientNumber} and look for ${patientName}`}>Confirm</a>\n\t\t\t\t\t<p className=\"success-message\" style={{ display: isSubmitted ? 'block' : 'none' }}>\n\t\t\t\t\t\tDetails has been sent.\n\t\t\t\t\t</p>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<ToastContainer autoClose={5000} limit={1} closeButton={false} />\n\t\t</div>\n\t);\n}\n\nexport default AppointmentForm;\n","import React from 'react';\nimport AppointmentForm from '../sub/AppointmentForm';\n\nfunction Appointment() {\n\treturn <AppointmentForm />;\n}\n\nexport default Appointment;\n"],"names":["useEffect","window","scrollTo","top","behavior","patientName","setPatientName","useState","patientNumber","setPatientNumber","patientGender","setPatientGender","appointmentTime","setAppointmentTime","preferredMode","setPreferredMode","isSubmitted","setIsSubmitted","formErrors","setFormErrors","React","className","style","fontFamily","padding","Link","to","onSubmit","e","preventDefault","errors","trim","length","Object","keys","toast","position","onOpen","onClose","type","value","onChange","target","required","href","concat","display","ToastContainer","autoClose","limit","closeButton","AppointmentForm"],"sourceRoot":""}