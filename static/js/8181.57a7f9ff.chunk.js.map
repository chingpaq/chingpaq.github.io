{"version":3,"file":"static/js/8181.57a7f9ff.chunk.js","mappings":"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","sources":["appFiles/components/common/UI/Paint/Paint.constants.tsx","appFiles/components/common/UI/Paint/TextEditor.js","appFiles/components/common/UI/Paint/Paint.tsx","appFiles/components/SideMenuEntries/Company/CompanyHome.js"],"sourcesContent":["import {\n  ArrowsMove,\n  ArrowUpLeft,\n  ArrowUpLeftSquareFill,\n  Circle,\n  FileFont,\n  Pencil,\n  Square,\n  Textarea,\n} from \"react-bootstrap-icons\";\n\nexport enum DrawAction {\n  Select = \"select\",\n  Rectangle = \"rectangle\",\n  Circle = \"circle\",\n  Scribble = \"freedraw\",\n  Arrow = \"arrow\",\n  Text = \"text\"\n}\n\nexport const PAINT_OPTIONS = [\n  {\n    id: DrawAction.Select,\n    label: \"Select Shapes\",\n    icon: <ArrowUpLeftSquareFill />,\n  },\n  { id: DrawAction.Rectangle, label: \"Draw Rectangle Shape\", icon: <Square /> },\n  { id: DrawAction.Circle, label: \"Draw Cirle Shape\", icon: <Circle /> },\n  { id: DrawAction.Arrow, label: \"Draw Arrow Shape\", icon: <ArrowUpLeft /> },\n  { id: DrawAction.Scribble, label: \"Scribble\", icon: <Pencil /> },\n  { id: DrawAction.Text, label: \"Text\", icon: <FileFont/> },\n];\n","import { Html } from 'react-konva-utils';\nimport { useEffect, useRef } from 'react';\n\n\nconst TextEditor = (props) => {\n  const {textNode, onClose, onChange} = props;\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    if (!textareaRef.current) return;\n\n    const textarea = textareaRef.current;\n    const stage = textNode.getStage();\n    const textPosition = textNode.position();\n    const stageBox = stage.container().getBoundingClientRect();\n    const areaPosition = {\n      x: textPosition.x,\n      y: textPosition.y,\n    };\n\n    // Match styles with the text node\n    textarea.value = textNode.text();\n    textarea.style.position = 'absolute';\n    textarea.style.top = `${areaPosition.y}px`;\n    textarea.style.left = `${areaPosition.x}px`;\n    textarea.style.width = `${textNode.width() - textNode.padding() * 2}px`;\n    textarea.style.height = `${textNode.height() - textNode.padding() * 2 + 5}px`;\n    textarea.style.fontSize = `${textNode.fontSize()}px`;\n    textarea.style.border = 'none';\n    textarea.style.padding = '0px';\n    textarea.style.margin = '0px';\n    textarea.style.overflow = 'hidden';\n    textarea.style.background = 'none';\n    textarea.style.outline = 'none';\n    textarea.style.resize = 'none';\n    textarea.style.lineHeight = textNode.lineHeight();\n    textarea.style.fontFamily = textNode.fontFamily();\n    textarea.style.transformOrigin = 'left top';\n    textarea.style.textAlign = textNode.align();\n    textarea.style.color = textNode.fill();\n\n    const rotation = textNode.rotation();\n    let transform = '';\n    if (rotation) {\n      transform += `rotateZ(${rotation}deg)`;\n    }\n    textarea.style.transform = transform;\n\n    textarea.style.height = 'auto';\n    textarea.style.height = `${textarea.scrollHeight + 3}px`;\n\n    textarea.focus();\n\n    const handleOutsideClick = (e) => {\n      if (e.target !== textarea) {\n        onChange(textarea.value);\n        onClose();\n      }\n    };\n\n    // Add event listeners\n    const handleKeyDown = (e) => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        onChange(textarea.value);\n        onClose();\n      }\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    const handleInput = () => {\n      const scale = textNode.getAbsoluteScale().x;\n      textarea.style.width = `${textNode.width() * scale}px`;\n      textarea.style.height = 'auto';\n      textarea.style.height = `${textarea.scrollHeight + textNode.fontSize()}px`;\n    };\n\n    textarea.addEventListener('keydown', handleKeyDown);\n    textarea.addEventListener('input', handleInput);\n    setTimeout(() => {\n      window.addEventListener('click', handleOutsideClick);\n    });\n\n    return () => {\n      textarea.removeEventListener('keydown', handleKeyDown);\n      textarea.removeEventListener('input', handleInput);\n      window.removeEventListener('click', handleOutsideClick);\n    };\n  }, [textNode, onChange, onClose]);\n\n  return (\n    <Html>\n      <textarea\n        ref={textareaRef}\n        style={{\n          minHeight: '1em',\n          position: 'absolute',\n        }}\n      />\n    </Html>\n  );\n};\n\nexport default TextEditor;","import { KonvaEventObject } from \"konva/lib/Node\";\nimport React, { memo, useCallback, useRef, useState } from \"react\";\nimport {\n  Stage,\n  Layer,\n  Text as KonvaText,\n  Rect as KonvaRect,\n  Image as KonvaImage,\n  Circle as KonvaCircle,\n  Line as KonvaLine,\n  Transformer,\n} from \"react-konva\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Arrow, Circle, Rectangle, Scribble, Tex } from \"./Paint.types\";\nimport { DrawAction, PAINT_OPTIONS } from \"./Paint.constants\";\nimport { SketchPicker } from \"react-color\";\n\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Flex,\n  IconButton,\n  Popover,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@chakra-ui/react\";\nimport { Download, Upload, XLg } from \"react-bootstrap-icons\";\n\ninterface PaintProps {\n  control: boolean;\n  visible: boolean;\n}\n\nconst downloadURI = (uri: string | undefined, name: string) => {\n  const link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri || \"\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\nimport TextEditor from \"./TextEditor\";\n\n\nconst SIZE = 2000;\nexport const Paint = memo((props: PaintProps) => {\n\n  const { control, visible } = props;\n\n  const [color, setColor] = useState(\"white\");\n  const [drawAction, setDrawAction] = useState<DrawAction>(DrawAction.Select);\n  const [scribbles, setScribbles] = useState<Scribble[]>([]);\n  const [rectangles, setRectangles] = useState<Rectangle[]>([]);\n  const [circles, setCircles] = useState<Circle[]>([]);\n  const [arrows, setArrows] = useState<Arrow[]>([]);\n  const [image, setImage] = useState<HTMLImageElement>();\n  const [images, setImages] = useState<HTMLImageElement[]>([]);\n  const [textArr, setTextArr] = useState<Tex[]>([]);\n  const [isEdit, setIsEdit] = useState(false);\n  const [targetEdit, setTargetEdit] = useState<Tex>();\n\n  const onImportImageSelect = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files?.[0]) {\n        const imageUrl = URL.createObjectURL(e.target.files?.[0]);\n        const image = new Image();\n        image.src = imageUrl;\n        setImage(image);\n\n        setImages((prevImages) => [\n          ...prevImages,\n          image\n        ])\n      }\n      e.target.files = null;\n    },\n    []\n  );\n\n  const fileRef = useRef<HTMLInputElement>(null);\n  const stageRef = useRef<any>(null);\n\n  const onImportImageClick = useCallback(() => {\n    fileRef?.current && fileRef?.current?.click();\n  }, []);\n\n  const onExportClick = useCallback(() => {\n    const dataUri = stageRef?.current?.toDataURL({ pixelRatio: 3 });\n    downloadURI(dataUri, \"image.png\");\n  }, []);\n\n  const onClear = useCallback(() => {\n    setRectangles([]);\n    setCircles([]);\n    setScribbles([]);\n    setArrows([]);\n    setTextArr([]);\n    setImage(undefined);\n    setImages([]);\n    setTargetEdit(undefined);\n  }, []);\n\n  const isPaintRef = useRef(false);\n  const textRef = useRef<any>([]);\n\n  const onStageMouseUp = useCallback(() => {\n    isPaintRef.current = false;\n  }, []);\n\n  const currentShapeRef = useRef<string>();\n\n  const onStageMouseDown = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (drawAction === DrawAction.Select) return;\n      isPaintRef.current = true;\n      const stage = stageRef?.current;\n      const pos = stage?.getPointerPosition();\n      const x = pos?.x || 0;\n      const y = pos?.y || 0;\n      const id = uuidv4();\n      const visible = true;\n      currentShapeRef.current = id;\n\n      switch (drawAction) {\n        case DrawAction.Scribble: {\n          setScribbles((prevScribbles) => [\n            ...prevScribbles,\n            {\n              id,\n              points: [x, y],\n              color,\n            },\n          ]);\n          break;\n        }\n        case DrawAction.Circle: {\n          setCircles((prevCircles) => [\n            ...prevCircles,\n            {\n              id,\n              radius: 1,\n              x,\n              y,\n              color,\n            },\n          ]);\n          break;\n        }\n        case DrawAction.Rectangle: {\n          setRectangles((prevRectangles) => [\n            ...prevRectangles,\n            {\n              id,\n              height: 1,\n              width: 1,\n              x,\n              y,\n              color,\n            },\n          ]);\n          break;\n        }\n        case DrawAction.Arrow: {\n          setArrows((prevArrows) => [\n            ...prevArrows,\n            {\n              id,\n              points: [x, y, x, y],\n              color,\n            },\n          ]);\n          break;\n        }\n        case DrawAction.Text: {\n          setTextArr((prevTexts) => [\n            ...prevTexts,\n            {\n              id,\n              text: 'Your text here',\n              color,\n              visible,\n              x,\n              y: 100,\n              width: 300\n            }\n          ]\n          );\n          break;\n        }\n      }\n    },\n    [drawAction, color]\n  );\n\n  const onStageMouseMove = useCallback(() => {\n    if (drawAction === DrawAction.Select || !isPaintRef.current) return;\n    const stage = stageRef?.current;\n    const id = currentShapeRef.current;\n    const pos = stage?.getPointerPosition();\n    const x = pos?.x || 0;\n    const y = pos?.y || 0;\n\n    switch (drawAction) {\n      case DrawAction.Scribble: {\n        setScribbles((prevScribbles) =>\n          prevScribbles?.map((prevScribble) =>\n            prevScribble.id === id\n              ? {\n                ...prevScribble,\n                points: [...prevScribble.points, x, y],\n              }\n              : prevScribble\n          )\n        );\n        break;\n      }\n      case DrawAction.Circle: {\n        setCircles((prevCircles) =>\n          prevCircles?.map((prevCircle) =>\n            prevCircle.id === id\n              ? {\n                ...prevCircle,\n                radius:\n                  ((x - prevCircle.x) ** 2 + (y - prevCircle.y) ** 2) ** 0.5,\n              }\n              : prevCircle\n          )\n        );\n        break;\n      }\n      case DrawAction.Rectangle: {\n        setRectangles((prevRectangles) =>\n          prevRectangles?.map((prevRectangle) =>\n            prevRectangle.id === id\n              ? {\n                ...prevRectangle,\n                height: y - prevRectangle.y,\n                width: x - prevRectangle.x,\n              }\n              : prevRectangle\n          )\n        );\n        break;\n      }\n\n    }\n  }, [drawAction]);\n\n  const transformerRef = useRef<any>(null);\n\n  const onShapeClick = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (drawAction !== DrawAction.Select) return;\n      const currentTarget = e.currentTarget;\n      transformerRef?.current?.node(currentTarget);\n    },\n    [drawAction]\n  );\n\n  const handleTextDblClick = useCallback((i: string) => {\n    const found = textArr.find(tx => tx.id === i);\n    if (found) {\n      found.visible = false;\n      setTargetEdit(found);\n      setIsEdit(true);\n    }\n\n  }, [textArr]);\n\n  const handleTextChange = useCallback((newText: string) => {\n    const found = textArr.find(tx => tx.id === targetEdit?.id);\n    if (found) {\n      found.text = newText;\n    }\n\n  }, [targetEdit]);\n\n  const isDraggable = drawAction === DrawAction.Select;\n\n  const onBgClick = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      transformerRef?.current?.nodes([]);\n    },\n    [drawAction]\n  );\n\n  const handleTransform = useCallback((e) => {\n    const found = textArr.findIndex(tx => tx.id === e);\n    const node = textRef.current[found];\n    const scaleX = node.scaleX();\n    const newWidth = node.width() * scaleX;\n    textArr[found].width = newWidth;\n\n    node.setAttrs({\n      width: newWidth,\n      scaleX: 1,\n    });\n    setTextArr(textArr);\n  }, [textArr]);\n\n  return (\n    visible && <Box m={4} width={`auto`}>\n      {control && <Flex justifyContent={\"space-between\"} alignItems=\"center\">\n        <ButtonGroup size=\"sm\" isAttached variant=\"solid\">\n          {PAINT_OPTIONS.map(({ id, label, icon }) => (\n            <IconButton\n              key={id}\n              aria-label={label}\n              icon={icon}\n              onClick={() => setDrawAction(id)}\n              colorScheme={id === drawAction ? \"whatsapp\" : undefined}\n            >\n            </IconButton>\n          ))}\n          <Popover>\n            <PopoverTrigger>\n              <Box\n                bg={color}\n                h={\"32px\"}\n                w={\"32px\"}\n                borderRadius=\"sm\"\n                cursor=\"pointer\"\n              ></Box>\n            </PopoverTrigger>\n            <PopoverContent width=\"300\">\n              <PopoverArrow />\n              <PopoverCloseButton />\n              <SketchPicker\n                color={color}\n                onChangeComplete={(selectedColor) =>\n                  setColor(selectedColor.hex)\n                }\n              />\n\n            </PopoverContent>\n          </Popover>\n          <IconButton aria-label={\"Clear\"} icon={<XLg />} onClick={onClear} />\n        </ButtonGroup>\n        <Flex gap={4} alignItems=\"center\" height=\"100%\">\n          <input\n            type=\"file\"\n            ref={fileRef}\n            onChange={onImportImageSelect}\n            style={{ display: \"none\" }}\n            accept=\"image/*\"\n          />\n          <Button\n            leftIcon={<Upload />}\n            variant=\"solid\"\n            onClick={onImportImageClick}\n            size=\"sm\"\n          >\n            Import Image\n          </Button>\n          <Button\n            leftIcon={<Download />}\n            colorScheme=\"whatsapp\"\n            variant=\"solid\"\n            onClick={onExportClick}\n            size=\"sm\"\n          >\n            Export\n          </Button>\n        </Flex>\n      </Flex>}\n\n      <Box\n        width={`inherit`}\n        height={`${SIZE}px`}\n        border=\"0px solid black\"\n        backgroundColor={'transparent'}\n        mt={4}\n        overflow=\"hidden\"\n      >\n        <Stage\n          height={SIZE}\n          width={SIZE}\n          ref={stageRef}\n          onMouseUp={onStageMouseUp}\n          onMouseDown={onStageMouseDown}\n          onMouseMove={onStageMouseMove}\n        >\n          <Layer>\n            <KonvaRect\n              x={0}\n              y={0}\n              height={SIZE}\n              width={SIZE}\n              fill=\"transparent\"\n              id=\"bg\"\n              onClick={onBgClick}\n            />\n\n            {images.map((img, i) => (\n              <KonvaImage\n                key={i}\n                image={img}\n                x={0}\n                y={0}\n                height={SIZE / 2}\n                width={SIZE / 2}\n                onClick={onShapeClick}\n                draggable={isDraggable}\n              />\n            )\n            )}\n\n            {rectangles.map((rectangle) => (\n              <KonvaRect\n                key={rectangle.id}\n                x={rectangle?.x}\n                y={rectangle?.y}\n                height={rectangle?.height}\n                width={rectangle?.width}\n                stroke={rectangle?.color}\n                fill={rectangle?.color}\n                id={rectangle?.id}\n                strokeWidth={4}\n                onClick={onShapeClick}\n                draggable={isDraggable}\n              />\n            ))}\n            {circles.map((circle) => (\n              <KonvaCircle\n                key={circle.id}\n                id={circle.id}\n                x={circle?.x}\n                y={circle?.y}\n                radius={circle?.radius}\n                stroke={circle?.color}\n                strokeWidth={4}\n                onClick={onShapeClick}\n                draggable={isDraggable}\n              />\n            ))}\n            {scribbles.map((scribble) => (\n              <KonvaLine\n                key={scribble.id}\n                id={scribble.id}\n                lineCap=\"round\"\n                lineJoin=\"round\"\n                stroke={scribble?.color}\n                strokeWidth={4}\n                points={scribble.points}\n                onClick={onShapeClick}\n                draggable={isDraggable}\n              />\n            ))}\n            {textArr.map((t, i) => (\n              <KonvaText\n                key={t.id}\n                id={t.id}\n                ref={(el) => {\n                  if (el) {\n                    textRef.current[i] = el;\n                  }\n                }}\n                x={0}\n                y={0}\n                text={t.text}\n                width={t.width}\n                fontSize={20}\n                fontFamily=\"Montserrat\"\n                fill={t.color}\n                onClick={onShapeClick}\n                onDblClick={() => handleTextDblClick(t.id)}\n                onTransform={() => handleTransform(t.id)}\n                draggable={isDraggable}\n                visible={t.visible}\n              />))}\n            {isEdit && (\n              <TextEditor\n                textNode={textRef.current[textArr.findIndex(t => t.id === targetEdit?.id)]}\n                onChange={handleTextChange}\n                onClose={() => {\n                  const found = textArr.findIndex(tx => tx.id === targetEdit?.id);\n                  textArr[found].visible = true;\n                  setTextArr(textArr);\n                  setIsEdit(false);\n                }}\n              />\n            )}\n            {!isEdit && <Transformer ref={transformerRef} />}\n          </Layer>\n        </Stage>\n      </Box>\n    </Box>\n  );\n});\n","import { connect, useDispatch } from 'react-redux';\n\nimport cls from './Company.module.scss';\nimport { useCallback, useRef, useEffect, useState } from 'react';\nimport { setMessageBar, setShowMenu, setShowSideMenu } from '../../../reduxStore/actions/flowActions';\nimport { FLOWHERO, uncachedUrl } from '../../../shared/utility';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getCompanyDetailsUsingSlug } from '../../../services/company.service';\nimport { first } from 'rxjs';\nimport { isMobile } from 'react-device-detect';\nimport { Button } from '../../common';\nimport CustomBasketball from '../../Custom/CustomBasketball';\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Paint } from '../../common/UI/Paint/Paint';\n\nconst CompanyHome = props => {\n\tconst dispatch = useDispatch();\n\tconst [companyData, setCompanyData] = useState(JSON.parse(localStorage.getItem('companyData')) ?? { 'name': '' });\n\tconst { slug } = useParams();\n\n\tconst navigate = useNavigate();\n\tdocument.title = `Company | ${slug}`;\n\n\tuseEffect(() => {\n\n\t\tif (!companyData?.display_name || slug !== companyData?.slug) {\n\t\t\tdispatch(setShowSideMenu(false));\n\t\t\tdispatch(setShowMenu(false));\n\t\t\tgetCompanyDetailsUsingSlug(slug)\n\t\t\t\t.pipe(first())\n\t\t\t\t.subscribe({\n\t\t\t\t\tnext: data => {\n\t\t\t\t\t\tdispatch(setMessageBar({ show: false, message: '' }));\n\t\t\t\t\t\tlocalStorage.setItem('companyData', JSON.stringify(data));\n\t\t\t\t\t\tsetCompanyData(data);\n\t\t\t\t\t\tif (!data?.company_standards?.hbanner) {\n\t\t\t\t\t\t\tnavigate('/login')\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t} else {\n\t\t\tif (!companyData?.company_standards?.hbanner) {\n\t\t\t\tnavigate('/login')\n\t\t\t}\n\t\t}\n\n\n\n\t}, [companyData]);\n\n\t// Custom Pages\n\tif (companyData?.id === '543c31fa-d480-4538-99b7-b055e740ad24') {\n\t\treturn <CustomBasketball />\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cls.companyHome}\n\t\t\tstyle={{\n\t\t\t\tbackgroundRepeat: isMobile ? '' : 'no-repeat',\n\t\t\t\theight: isMobile ? '100vh' : '',\n\t\t\t\tbackgroundImage: companyData?.company_standards?.hbanner ? `url(${companyData?.company_standards?.hbanner})` : ``,\n\t\t\t\tbackgroundColor: 'white',\n\t\t\t\tbackgroundSize: isMobile ? 'scale-down' : 'cover',\n\t\t\t\tbackgroundPosition: isMobile ? 'left' : 'center',\n\t\t\t\tpadding: '20px'\n\t\t\t}}\n\t\t>\n\t\t\t<ChakraProvider>\n\t\t\t\t<Paint control={false} visible={false}/>\n\t\t\t</ChakraProvider>\n\t\t\t<div className={cls.navbarSection} style={{ padding: isMobile ? '0' : '', display: companyData.company_standards?.message ? 'flex' : 'flex', flexDirection: isMobile ? 'column' : 'row' }}>\n\t\t\t\t<div style={{ display: 'flex', margin: '20px', width: '100%', justifyContent: 'space-between' }}>\n\t\t\t\t\t{!isMobile && companyData?.logo ?\n\t\t\t\t\t\t<img alt=\"lg\" src={uncachedUrl(companyData?.logo)} className={cls.logoUrlImg} /> :\n\t\t\t\t\t\t<div style={{ padding: '5px 20px 10px', display: isMobile ? 'none' : companyData?.logo ? 'none' : '', backgroundColor: 'black', borderRadius: '3px' }}>\n\t\t\t\t\t\t\t{FLOWHERO(isMobile ? '18px' : '36px', 'white', 'bold')}\n\t\t\t\t\t\t\t<div style={{ fontSize: isMobile ? '12px' : '14px', fontWeight: isMobile ? 'normal' : 'bold', fontFamily: 'var(--app-text-mobile-font)', color: 'white' }}>\n\t\t\t\t\t\t\t\t{companyData?.display_name?.toUpperCase()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div style={{ display: 'flex', flexDirection: isMobile ? 'row' : 'row' }}>\n\n\t\t\t\t\t\t{!isMobile &&\n\n\t\t\t\t\t\t\t<Button title={'LOGIN'}\n\t\t\t\t\t\t\t\tstyle={{ marginTop: '20px' }}\n\t\t\t\t\t\t\t\ttitleStyle={{\n\t\t\t\t\t\t\t\t\tfontFamily: 'var(--app-text-main-font)',\n\t\t\t\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\t\tfontSize: '16px',\n\t\t\t\t\t\t\t\t\tletterSpacing: '.8px'\n\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\tclicked={() => {\n\t\t\t\t\t\t\t\t\tnavigate('/login');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{companyData?.core_values?.singleUser && !isMobile &&\n\n\t\t\t\t\t\t\t<Button title={'SIGN UP'} clicked={() => {\n\t\t\t\t\t\t\t\tdispatch(setMessageBar({ show: false, message: '' }));\n\t\t\t\t\t\t\t\tnavigate('/user');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyle={{ marginTop: '20px' }}\n\t\t\t\t\t\t\t\ttitleStyle={{\n\t\t\t\t\t\t\t\t\tfontFamily: 'var(--app-text-main-font)',\n\t\t\t\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\t\tfontSize: '16px',\n\t\t\t\t\t\t\t\t\tletterSpacing: '.8px'\n\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t{isMobile && <div style={{ padding: '10px 10px', backgroundColor: 'rgba(0, 0, 0, .3)', bbackgroundColor: 'var(--app-color-gray-dark)', borderRadius: '3px', width: '100%', alignContent: 'center' }}>\n\n\t\t\t\t<div style={{ fontSize: isMobile ? '20px' : '14px', fontWeight: 'normal', fontFamily: 'var(--app-text-mobile-font)', color: 'white' }}>\n\t\t\t\t\t{companyData?.display_name?.toUpperCase()}\n\t\t\t\t\t{FLOWHERO('14px', 'white', 'bold')}\n\t\t\t\t</div>\n\n\t\t\t</div>}\n\t\t\t{isMobile && <div className={cls.centerDiv} style={{ backgroundColor: 'transparent', fontSize: isMobile ? '' : '30px' }}>\n\t\t\t\t<Button title={'LOGIN'} clicked={() => navigate('/login')}\n\t\t\t\t\tstyle={{ width: '200px', }}\n\t\t\t\t\ttitleStyle={{\n\t\t\t\t\t\tfontFamily: 'var(--app-text-mobile-font)',\n\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tfontSize: '16px',\n\t\t\t\t\t\tletterSpacing: '0.8px'\n\t\t\t\t\t}}\n\t\t\t\t\tlight\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t}\n\t\t\t{!isMobile && companyData.company_standards?.message && <div className={cls.banner2}>{companyData.company_standards?.message}</div>}\n\t\t\t{!isMobile && companyData.company_standards?.subMessage && (\n\t\t\t\t<div className={cls.banner2}>\n\t\t\t\t\t{companyData.company_standards?.subMessage}\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = store => {\n\tconst {\n\t\tauthenticatedUser: { position },\n\t\tauthenticatedUser,\n\t} = store.authReducer;\n\tconst { user } = store.sessionReducer;\n\n\tconst { companyData, companyPositionsArray, allTasks, allCompletedTasks, allCompletedTasksPaginated, companyUsersArray } = store.flowReducer;\n\treturn {\n\t\tcompanyData,\n\t\tcompanyPositionsArray,\n\t\tposition,\n\t\tallTasks,\n\t\tallCompletedTasks,\n\t\tallCompletedTasksPaginated,\n\t\tuser,\n\t\tcompanyUsersArray,\n\t\tauthenticatedUser,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyHome);\n"],"names":["DrawAction","PAINT_OPTIONS","id","Select","label","icon","React","createElement","ArrowUpLeftSquareFill","Rectangle","Square","Circle","Arrow","ArrowUpLeft","Scribble","Pencil","Text","FileFont","props","textNode","onClose","onChange","textareaRef","useRef","useEffect","current","textarea","stage","getStage","textPosition","position","areaPosition","container","getBoundingClientRect","x","y","value","text","style","top","concat","left","width","padding","height","fontSize","border","margin","overflow","background","outline","resize","lineHeight","fontFamily","transformOrigin","textAlign","align","color","fill","rotation","transform","scrollHeight","focus","handleOutsideClick","e","target","handleKeyDown","key","shiftKey","preventDefault","handleInput","scale","getAbsoluteScale","addEventListener","setTimeout","window","removeEventListener","Html","ref","minHeight","SIZE","Paint","memo","control","visible","setColor","useState","drawAction","setDrawAction","scribbles","setScribbles","rectangles","setRectangles","circles","setCircles","arrows","setArrows","image","setImage","images","setImages","textArr","setTextArr","isEdit","setIsEdit","targetEdit","setTargetEdit","onImportImageSelect","useCallback","_e$target$files","files","_e$target$files2","imageUrl","URL","createObjectURL","Image","src","prevImages","fileRef","stageRef","onImportImageClick","_fileRef$current","click","onExportClick","_stageRef$current","downloadURI","uri","name","link","document","download","href","body","appendChild","removeChild","toDataURL","pixelRatio","onClear","undefined","isPaintRef","textRef","onStageMouseUp","currentShapeRef","onStageMouseDown","pos","getPointerPosition","uuidv4","prevScribbles","points","prevCircles","radius","prevRectangles","prevArrows","prevTexts","onStageMouseMove","map","prevScribble","_objectSpread","prevCircle","prevRectangle","transformerRef","onShapeClick","_transformerRef$curre","currentTarget","node","handleTextDblClick","i","found","find","tx","handleTextChange","newText","isDraggable","onBgClick","_transformerRef$curre2","nodes","handleTransform","findIndex","scaleX","newWidth","setAttrs","Box","m","Flex","justifyContent","alignItems","ButtonGroup","size","isAttached","variant","_ref","IconButton","onClick","colorScheme","Popover","PopoverTrigger","bg","h","w","borderRadius","cursor","PopoverContent","PopoverArrow","PopoverCloseButton","SketchPicker","onChangeComplete","selectedColor","hex","XLg","gap","type","display","accept","Button","leftIcon","Upload","Download","backgroundColor","mt","Stage","onMouseUp","onMouseDown","onMouseMove","Layer","KonvaRect","img","KonvaImage","draggable","rectangle","stroke","strokeWidth","circle","KonvaCircle","scribble","KonvaLine","lineCap","lineJoin","t","KonvaText","el","onDblClick","onTransform","TextEditor","Transformer","connect","store","authenticatedUser","authReducer","user","sessionReducer","companyData","companyPositionsArray","allTasks","allCompletedTasks","allCompletedTasksPaginated","companyUsersArray","flowReducer","dispatch","_JSON$parse","_companyData$company_2","_companyData$company_3","_companyData$company_4","_companyData$display_","_companyData$core_val","_companyData$display_2","_companyData$company_5","_companyData$company_6","_companyData$company_7","_companyData$company_8","useDispatch","setCompanyData","JSON","parse","localStorage","getItem","slug","useParams","navigate","useNavigate","title","_companyData$company_","display_name","company_standards","hbanner","setShowSideMenu","setShowMenu","getCompanyDetailsUsingSlug","pipe","first","subscribe","next","data","_data$company_standar","setMessageBar","show","message","setItem","stringify","CustomBasketball","className","cls","backgroundRepeat","isMobile","backgroundImage","backgroundSize","backgroundPosition","ChakraProvider","flexDirection","logo","alt","uncachedUrl","FLOWHERO","fontWeight","toUpperCase","marginTop","titleStyle","letterSpacing","light","clicked","core_values","singleUser","bbackgroundColor","alignContent","subMessage"],"sourceRoot":""}