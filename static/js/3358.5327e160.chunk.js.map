{"version":3,"file":"static/js/3358.5327e160.chunk.js","mappings":"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","sources":["webpack://flowhero/./src/appFiles/components/Auth/Login.module.scss?947f","appFiles/hooks/useValidation.ts","webpack://flowhero/./src/appFiles/components/Auth/LoginForm/FormElements/TextField.module.scss?eba6","appFiles/components/Auth/LoginForm/FormElements/TextField.tsx","appFiles/components/Auth/LoginForm/FormElements/PasswordTextField.tsx","webpack://flowhero/./src/appFiles/components/Auth/LoginForm/LoginForm.module.scss?71be","appFiles/components/Auth/LoginForm/LoginForm.tsx","appFiles/services/master.service.js","appFiles/components/Auth/Login.js","appFiles/services/tasks.service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"host\":\"Login_host__HJ5T9\",\"firstContainer\":\"Login_firstContainer__kfGLU\",\"headerTopBarContainer\":\"Login_headerTopBarContainer__QWz8Y\",\"firstContainerContent\":\"Login_firstContainerContent__wbbdK\",\"logoWrapper\":\"Login_logoWrapper__xOqDN\",\"processmakerLogo\":\"Login_processmakerLogo__DGHzj\",\"header2\":\"Login_header2__tfUwR\",\"recoverPasswordButton\":\"Login_recoverPasswordButton__FUuDW\",\"secondContainer\":\"Login_secondContainer__BFYgV\",\"bottomButtonsContainer\":\"Login_bottomButtonsContainer__7NrxO\",\"headerTopBar\":\"Login_headerTopBar__RSolU\",\"logoUrlImg\":\"Login_logoUrlImg__UaUon\",\"centerDiv\":\"Login_centerDiv__le4iU\",\"logoUrlImgMobile\":\"Login_logoUrlImgMobile__gvaUr\",\"navbaritems\":\"Login_navbaritems__g7mXs\",\"navbarlinks\":\"Login_navbarlinks__dLaYR\"};","import * as yup from 'yup';\nimport yupPassword from 'yup-password';\nimport { useMemo } from 'react';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\n\nyupPassword(yup);\nconst regSpecial = /[^A-Za-z0-9]/;\nconst regLower = /[a-z]/;\nconst regUpper = /[A-Z]/;\nconst regNumber = /[0-9]/;\nexport const allRegs: RegExp[] = [regSpecial, regLower, regUpper, regNumber];\n\nexport const useValidation = () => {\n\treturn useMemo(() => {\n\t\treturn {\n\t\t\tyup,\n\t\t\tschemas: {\n\t\t\t\temail: yup.string().min(6, 'Username must have at least 8 characters'),\n\t\t\t\tpassword: yup.string().min(8, 'Password must have at least 8 characters'),\n\t\t\t\t\n\t\t\t\tpasswordRepeat: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.oneOf([yup.ref('password'), null], 'Passwords does not match')\n\t\t\t\t\t.required('Password repeat is required'),\n\t\t\t\twebsite: yup.string().url(),\n\t\t\t\tphoneNumber: yup.string().test({\n\t\t\t\t\tname: 'phone-pattern',\n\t\t\t\t\tmessage: 'Not a valid phone number',\n\t\t\t\t\ttest: (value = '') => value == '' || isValidPhoneNumber(value),\n\t\t\t\t}),\n\t\t\t\tmobilePhoneNumber: yup.string().test({\n\t\t\t\t\tname: 'mobile-phone-pattern',\n\t\t\t\t\tmessage: 'Not a valid mobile phone number',\n\t\t\t\t\ttest: (value = '') => value == '' || isValidPhoneNumber(value),\n\t\t\t\t}),\n\t\t\t\temployerName: yup.string().required('Employer name is required'),\n\t\t\t},\n\t\t};\n\t}, []);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"TextField_inputContainer__-Li1l\",\"ornament\":\"TextField_ornament__1DMyr\",\"rightButton\":\"TextField_rightButton__miccv\",\"textLabel\":\"TextField_textLabel__zJNw6\",\"textInput\":\"TextField_textInput__TQ2mO\",\"userTextInput\":\"TextField_userTextInput__8z5C4\",\"inputLabel\":\"TextField_inputLabel__IAwPE\",\"errorContainer\":\"TextField_errorContainer__D-YWL\"};","import classNames from 'classnames';\nimport React, { ChangeEventHandler, ComponentProps, forwardRef, ReactNode, useState } from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport cls from './TextField.module.scss';\n\nexport type TextFieldProps = {\n\t/** Label of the input field */\n\tlabel?: string;\n\t/** Check if the field is mandatory or not */\n\thasMandatoryIndicator?: boolean;\n\t/** The text shown within the input field, in the default state */\n\tplaceholder?: string;\n\t/** Number of characters allowed */\n\tcharactersNo?: number;\n\t/** The icon type used for the input field*/\n\ticon?: ReactNode;\n\t/**  Right button for features as show/hide  */\n\trightButtonLabel?: any;\n\trightButtonAction?: () => void;\n\trightButtonClass?: string;\n\t/** Error message */\n\terrorMessage?: string;\n\t/** It is shown below the input field or\n\t * below the error message (if applicable ) */\n\thelpText?: string;\n\ttype?: ComponentProps<'input'>['type'];\n\tisDisabled?: ComponentProps<'input'>['disabled'];\n\treadOnly?: ComponentProps<'input'>['readOnly'];\n\tdefaultValue?: string;\n\tautoComplete?: string;\n} & ComponentProps<'div'> &\n\tPartial<UseFormRegisterReturn>;\n\n/**\n * Text fields allow users to enter text into a UI.\n * They typically appear in create processes or dialogues.\n */\nconst TextField = forwardRef<HTMLInputElement, TextFieldProps>((props, ref) => {\n\tconst { isDisabled = false, readOnly, label = '', hasMandatoryIndicator, placeholder = 'Insert email', charactersNo, icon, rightButtonLabel, rightButtonAction, rightButtonClass, errorMessage, defaultValue, onChange, name, type = 'text', autoComplete, ...rest } = props;\n\tconst [inputValue, setInputValue] = useState(defaultValue ?? '');\n\tconst hasError = Boolean(errorMessage);\n\n\tconst handleChange: ChangeEventHandler<HTMLInputElement> = event => {\n\t\tsetInputValue(event.target.value);\n\t\tonChange?.(event);\n\t};\n\n\treturn (\n\t\t<div {...rest}>\n\t\t\t<Label hasMandatoryIndicator={hasMandatoryIndicator}>{label}</Label>\n\t\t\t<InputContainer hasError={hasError} className={cls.inputContainer}>\n\t\t\t\t<Input\n\t\t\t\t\tapp-readonly={readOnly ? 'readonly' : ''}\n\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\tautoComplete={autoComplete}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\tname={name}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tmaxLength={charactersNo}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tref={ref}\n\t\t\t\t\tclassName={cls.textInput}\n\t\t\t\t/>\n\t\t\t\t{icon && <div className={cls.ornament}>{icon}</div>}\n\t\t\t\t{rightButtonLabel && (\n\t\t\t\t\t<button type={'button'} onClick={rightButtonAction} className={classNames(cls.rightButton, rightButtonClass)}>\n\t\t\t\t\t\t{rightButtonLabel}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</InputContainer>\n\n\t\t\t{errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n\t\t</div>\n\t);\n});\n\nexport const UserTextField = forwardRef<HTMLInputElement, TextFieldProps>((props, ref) => {\n\tconst { isDisabled = false, readOnly, label = '', hasMandatoryIndicator, placeholder = 'Insert email', charactersNo, icon, rightButtonLabel, rightButtonAction, rightButtonClass, errorMessage, defaultValue, onChange, name, type = 'text', autoComplete, ...rest } = props;\n\tconst [inputValue, setInputValue] = useState(defaultValue ?? '');\n\tconst hasError = Boolean(errorMessage);\n\n\tconst handleChange: ChangeEventHandler<HTMLInputElement> = event => {\n\t\tsetInputValue(event.target.value);\n\t\tonChange?.(event);\n\t};\n\n\treturn (\n\t\t<div {...rest}>\n\t\t\t<Label hasMandatoryIndicator={hasMandatoryIndicator}>{label}</Label>\n\t\t\t{inputValue && <div className={cls.textLabel}>{placeholder}</div>}\n\t\t\t<InputContainer hasError={hasError} className={cls.inputContainer}>\n\t\t\t\t<Input\n\t\t\t\t\tapp-readonly={readOnly ? 'readonly' : ''}\n\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\tautoComplete={autoComplete}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\tname={name}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tmaxLength={charactersNo}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tref={ref}\n\t\t\t\t\tclassName={cls.userTextInput}\n\t\t\t\t/>\n\t\t\t\t{icon && <div className={cls.ornament}>{icon}</div>}\n\t\t\t\t{rightButtonLabel && (\n\t\t\t\t\t<button type={'button'} onClick={rightButtonAction} className={classNames(cls.rightButton, rightButtonClass)} style={{ fontFamily: 'Montserrat', fontSize: '14px', fontWeight: 'normal' }}>\n\t\t\t\t\t\t{rightButtonLabel}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</InputContainer>\n\n\t\t\t{errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n\t\t</div>\n\t);\n});\nexport const InputContainer = forwardRef<HTMLDivElement, { hasError: boolean } & ComponentProps<'div'>>((props, ref) => {\n\tconst { className, hasError, ...rest } = props;\n\treturn <div app-error={hasError ? 'error' : ''} ref={ref} {...rest} className={classNames(cls.inputContainer, className)} />;\n});\n\n/**\n * Input contol with applied styling to be used **as inside of `InputContainer`**\n * Uses less bottom margin when active to balance the stronger `border` of the `InputContiner`\n */\nexport const Input = forwardRef<HTMLInputElement, ComponentProps<'input'>>((props, ref) => {\n\tconst { className, ...rest } = props;\n\treturn <input ref={ref} {...rest} className={classNames(cls.textInput, className)} />;\n});\nexport function ErrorMessage(props: ComponentProps<'p'>) {\n\tconst { children, ...rest } = props;\n\treturn (\n\t\t<p className={cls.errorContainer} {...rest}>\n\t\t\t{children}\n\t\t</p>\n\t);\n}\ntype LabelProps = {\n\t/** adds a \"*\"-Indicator to the end of the title that turns red in case of an error */\n\thasMandatoryIndicator?: boolean;\n} & ComponentProps<'label'>;\n\n/**\n * displayed above an `input` control.\n */\nexport function Label(props: LabelProps) {\n\tconst { hasMandatoryIndicator, children, className, ...rest } = props;\n\treturn (\n\t\t<label className={classNames(cls.inputLabel, className)} {...rest}>\n\t\t\t{children}\n\t\t\t{hasMandatoryIndicator && <span className=\"text-danger\">*</span>}\n\t\t</label>\n\t);\n}\nexport default TextField;\n","import { ComponentProps, forwardRef, useState } from 'react';\nimport TextField, { UserTextField } from './TextField';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\ntype PasswordTextFieldProps = Omit<ComponentProps<typeof TextField>, 'icon' | 'type'>;\n\n/**\n * Same as `TextField` Component but with special password related features.\n * Shows an Icon at the end of the input to toggle if password is hidden or not.\n * @returns\n */\nconst PasswordTextField = forwardRef<HTMLInputElement, PasswordTextFieldProps>((props, ref) => {\n\tconst [showPassword, setShowPassword] = useState(false);\n\n\treturn <UserTextField {...props} ref={ref} type={showPassword ? 'text' : 'password'} rightButtonLabel={showPassword ? <FontAwesomeIcon icon={faEye} style={{color:'black',  width: '16px', height: '16px' }} /> : <FontAwesomeIcon icon={faEyeSlash} style={{color:'var(--app-color-gray-light)',  width: '16px', height: '16px' }} />} rightButtonAction={() => setShowPassword(c => !c)} rightButtonClass={''} />;\n});\n\nexport default PasswordTextField;\n","// extracted by mini-css-extract-plugin\nexport default {\"host\":\"LoginForm_host__UvJwq\",\"title\":\"LoginForm_title__9p60B\",\"text\":\"LoginForm_text__yMnPH\",\"row\":\"LoginForm_row__9D3he\",\"buttons\":\"LoginForm_buttons__spuMH\",\"checkbox\":\"LoginForm_checkbox__d1y1-\",\"checkboxLabel\":\"LoginForm_checkboxLabel__vx8px\",\"signInButton\":\"LoginForm_signInButton__VPwbB\",\"errorMessage\":\"LoginForm_errorMessage__vGOop\",\"recoverPasswordButton\":\"LoginForm_recoverPasswordButton__fDOss\",\"recoverPassword\":\"LoginForm_recoverPassword__Cwkby\"};","\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport React, { ComponentProps, memo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { first, take } from 'rxjs/operators';\nimport { useValidation } from '../../../hooks/useValidation';\nimport { setOnBoardingComplete, setShowMenu } from '../../../reduxStore/actions/flowActions';\nimport { setIsOnboarding, setOnBoardingModalsVisibility, setOnBoardingVisible } from '../../../reduxStore/actions/modalsActions';\nimport type { StoreType } from '../../../reduxStore/store';\nimport { userLogin } from '../../../services/auth.service';\nimport { Button } from '../../common';\nimport { Checkbox } from './FormElements/Checkbox';\nimport PasswordTextField from './FormElements/PasswordTextField';\nimport TextField, { ErrorMessage, UserTextField } from './FormElements/TextField';\nimport cls from './LoginForm.module.scss';\nimport { isMobile } from 'react-device-detect';\nimport { APP_NAME } from '../../../shared/utility';\n\nconst accessRestrictedMessage = `Please setup the company\\nPlease contact comapny admin.\\nBasic company information must be enroled\\nBefore you will be granted access to ${APP_NAME}`;\ntype FormType = {\n\temail: string;\n\tpassword: string;\n\trememberMe?: boolean;\n};\n\nexport type LoginFormProps = {\n\tclassName: string;\n\tonLoginSuccess?: (data: any) => void;\n\tonResetPassword?: () => void;\n} & ComponentProps<'form'>;\n\nexport const LoginForm = memo((props: LoginFormProps) => {\n\tconst { onLoginSuccess, className, onResetPassword } = props;\n\tconst dispatch = useDispatch();\n\tconst { rememberMe } = useSelector((reduxStore: StoreType) => reduxStore.authReducer.sessionSettings);\n\tconst [loading, setLoading] = useState(false);\n\tconst [responseError, setResponseError] = useState('');\n\tconst { schemas, yup } = useValidation();\n\tconst {\n\t\tregister,\n\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t\tgetValues,\n\t} = useForm<FormType>({\n\t\tmode: 'onSubmit',\n\t\tcriteriaMode: 'firstError',\n\t\tresolver: yupResolver(\n\t\t\tyup.object().shape({\n\t\t\t\temail: schemas.email,\n\t\t\t\tpassword: schemas.password,\n\t\t\t})\n\t\t),\n\t});\n\n\tconst onSubmit = (_data: FormType) => {\n\t\tsetResponseError('');\n\t\tsetLoading(true);\n\t\tconst { email, password, rememberMe } = getValues();\n\t\tuserLogin({ email: email, password: password, rememberMe: true })\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe({\n\t\t\t\tnext: data => {\n\t\t\t\t\tconst { is_admin, onboarding_status } = data;\n\n\t\t\t\t\tif (onboarding_status === false) {\n\t\t\t\t\t\tif (is_admin === true) {\n\t\t\t\t\t\t\tdispatch(setOnBoardingVisible(true));\n\t\t\t\t\t\t\tdispatch(setIsOnboarding(true));\n\t\t\t\t\t\t\tdispatch(setOnBoardingModalsVisibility({ firstModalVisible: true }));\n\t\t\t\t\t\t\tdispatch(setShowMenu(false));\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetResponseError(accessRestrictedMessage);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(setOnBoardingVisible(false));\n\t\t\t\t\t\tdispatch(setIsOnboarding(false));\n\t\t\t\t\t\tdispatch(setOnBoardingComplete(true));\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tonLoginSuccess?.(data);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: error => {\n\t\t\t\t\tconst extractedError = typeof error.data == 'string' ? error.data : error?.error ? error?.error : error?.data?.message;\n\t\t\t\t\tsetResponseError((error.status === 422 || extractedError === 'Not authenticated') ? 'Invalid user name or password, please try again.' : extractedError);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t},\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)} className={classNames(cls.host, className)} onClick={() => setResponseError('')}>\n\t\t\t<div className={cls.row} app-variant=\"first-row\">\n\t\t\t\t<UserTextField style={{ backgroundColor: 'rgb(246,244,236)' }} autoComplete={rememberMe ? 'username' : 'new-password'} type=\"text\" placeholder={'Email or Username'} defaultValue={localStorage.getItem('username') ?? ''} {...register('email')} />\n\t\t\t</div>\n\t\t\t<div className={cls.row} app-variant=\"second-row\">\n\t\t\t\t<PasswordTextField style={{ backgroundColor: 'rgb(246,244,236)' }} autoComplete={rememberMe ? 'on' : 'off'} placeholder={'Password'} defaultValue={localStorage.getItem('password') ?? ''} {...register('password')} />\n\t\t\t</div>\n\t\t\t{(responseError || errors.password?.message || errors.email?.message) && <ErrorMessage>{`${responseError ?? ''} ${errors.password?.message ?? ''} ${errors.email?.message ?? ''} `}</ErrorMessage>}\n\t\t\t<Button\n\t\t\t\tdisabled={loading}\n\t\t\t\tloading={loading}\n\t\t\t\ttype={'submit'}\n\t\t\t\ttitle={'Sign in'}\n\t\t\t\tclassName={cls.signInButton}\n\t\t\t/>\n\t\t\t<div className={cls.row} app-variant=\"third-row\">\n\t\t\t\t<br />\n\t\t\t\t<p className={cls.recoverPasswordButton} onClick={onResetPassword}>{isMobile ? 'Forgot Password' : 'Need to find your password?'}</p>\n\t\t\t\t<br />\n\t\t\t</div>\n\n\t\t</form>\n\t);\n});\n","import { getAllComponentBlueprints, getFieldTypes } from './components.service';\nimport { getCompanyProcesses } from './processes.service';\nimport { getAllModules } from './module.service';\nimport { APPEND_TO_DATA, CLEAR_TO_SET_DATA } from '../shared/utility';\nimport { Observable, take } from 'rxjs';\nimport { getAllCompanyPositionsAsArray } from './company.service';\nimport { getAllUsers } from './user.service';\nimport { PAYMONGO_KEY, URLS } from './API_CONSTANTS';\nimport { getSubscriptionPlans } from './payments.service';\nimport { getAllCompletedTasks, getAllTasks } from './tasks.service';\nimport { store } from '../reduxStore/store';\nimport { axiosInstance } from './axiosInstance';\nimport { setAllModules } from '../reduxStore/actions/flowActions';\n\nexport const getMasterData = (userOnly = false) => {\n\tconst { authenticatedUser } = store.getState().authReducer;\n\tconst { companyData } = store.getState().flowReducer;\n\tif (userOnly === false) {\n\t\tgetAllComponentBlueprints(CLEAR_TO_SET_DATA)\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe({\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tgetFieldTypes()\n\t\t\t\t\t\t.pipe(take(1))\n\t\t\t\t\t\t.subscribe({\n\t\t\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\t\t\tgetAllModules(APPEND_TO_DATA, false).pipe(take(1)).subscribe({});\n\t\t\t\t\t\t\t\tgetAllCompanyPositionsAsArray().pipe(take(1)).subscribe({\n\t\t\t\t\t\t\t\t\tnext: () => getAllTasks(authenticatedUser.id)\n\t\t\t\t\t\t\t\t\t\t.pipe(take(1))\n\t\t\t\t\t\t\t\t\t\t.subscribe({\n\t\t\t\t\t\t\t\t\t\t\tcomplete: () => getAllCompletedTasks(CLEAR_TO_SET_DATA, authenticatedUser.id).pipe(take(1)).subscribe({}),\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t} else {\n\t\tgetAllUsers().pipe(take(1)).subscribe({});\n\t}\n\n\tif (PAYMONGO_KEY !== '') {\n\t\tgetSubscriptionPlans().pipe(take(1)).subscribe({});\n\t}\n};\n\nexport const getMobileData = () => {\n\tconst { authenticatedUser } = store.getState().authReducer;\n\tgetAllComponentBlueprints(CLEAR_TO_SET_DATA).pipe(take(1)).subscribe({});\n\tgetAllCompanyPositionsAsArray().pipe(take(1)).subscribe({\n\t\tnext: () => getAllTasks(authenticatedUser.id)\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe({\n\t\t\t\tcomplete: () => getAllCompletedTasks(CLEAR_TO_SET_DATA, authenticatedUser.id).pipe(take(1)).subscribe({}),\n\t\t\t})\n\t})\n};\n\nexport const getData = (url, headers) => {\n\n    return new Observable(subscriber => {\n        URLS.basic.getData2(url, headers)\n            .then((data) => subscriber.next(data))\n            .catch((error) => {\n                subscriber.error(error);\n            });\n    });\n   \n};\n\n","import { useEffect, memo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { restartAxiosAbort, setOnBoardingComplete } from '../../reduxStore/actions/flowActions';\nimport cls from './Login.module.scss';\nimport { LoginForm } from './LoginForm/LoginForm';\nimport { isMobile } from 'react-device-detect';\nimport { resetApplication } from '../../services/auth.service';\nimport { getMasterData, getMobileData } from '../../services/master.service';\nimport { store } from '../../reduxStore/store';\nimport { APP_NAME, FLOWHERO } from '../../shared/utility';\n\nconst Login = memo(props => {\n\tconst { title } = props;\n\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\tconst { companyData, lastUpdates } = store.getState().flowReducer;\n\tconst { authenticated } = store.getState().sessionReducer;\n\tconst [company,] = useState(JSON.parse(localStorage.getItem('companyData')) ?? { 'logo': '' });\n\tdocument.title = `Login | ${APP_NAME}`;\n\n\tuseEffect(() => {\n\t\tif (authenticated) {\n\t\t\tnavigate('/flowhero');\n\t\t} else {\n\t\t\tdispatch(setOnBoardingComplete(false));\n\t\t\tdispatch(restartAxiosAbort())\n\t\t\tresetApplication();\n\t\t}\n\n\n\t}, []);\n\n\treturn authenticated == false ? (\n\t\t<div style={{ display: 'flex', flexDirection: 'row', width: '100%', height: '98vh' }}>\n\t\t\t<div style={{ width: isMobile ? '100%' : '20%', padding: '20px', minWidth: '300px' }}>\n\n\t\t\t\t<div className={cls.headerTopBarContainer} style={{ fontSize: isMobile ? '12px' : '16px', marginTop: '20px' }} onClick={() => navigate('/flowhero')}>\n\t\t\t\t\t{!company?.logo && <p style={{fontFamily: 'Montserrat'}}>{company?.display_name?.toUpperCase()}</p>}\n\t\t\t\t\t{company?.logo ?\n\t\t\t\t\t\t<img alt=\"lg\" src={company?.logo} className={isMobile ? cls.logoUrlImgMobile : cls.logoUrlImg} />\n\t\t\t\t\t\t:\n\t\t\t\t\t\tisMobile ? FLOWHERO('30px', 'var(--app-color-gray-dark)', 'bold') :\n\t\t\t\t\t\t\tFLOWHERO('32px', 'var(--app-color-gray-dark)', 'bold')}\n\t\t\t\t</div>\n\t\t\t\t<LoginForm\n\t\t\t\t\tonLoginSuccess={data => {\n\t\t\t\t\t\tconst { isSingleApp } = data;\n\n\t\t\t\t\t\tlastUpdates.componentsByModule = {};\n\n\t\t\t\t\t\tif (!(companyData?.status === 'trial_ended' || companyData?.status === 'inactive')) {\n\t\t\t\t\t\t\tif (isSingleApp === true && isMobile) {\n\t\t\t\t\t\t\t\tgetMobileData();\n\t\t\t\t\t\t\t\tnavigate('/mobile');\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgetMasterData();\n\t\t\t\t\t\t\t\t// getMobileData();\n\t\t\t\t\t\t\t\t// navigate('/mobile');\n\t\t\t\t\t\t\t\t// return;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (companyData?.status === 'inactive') {\n\t\t\t\t\t\t\tgetMasterData(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// navigate('/login');\n\t\t\t\t\t\t\t// return;\n\t\t\t\t\t\t\tgetMasterData();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnavigate('/');\n\t\t\t\t\t}}\n\t\t\t\t\tonResetPassword={() => navigate('/reset-password')}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t\n\t\t\t<div style={{ width: '80%', display: isMobile ? 'none' : 'flex', backgroundColor: 'rgb(246,244,236)', justifyContent: 'flex-end', padding: '20px', height: '102vh'  }} >\n\t\t\t\t<ul className={cls.navbaritems} style={{ display: isMobile ? 'none' : '', marginRight: '20px' }}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href= {company?.slug ? `#/pages/home/${company?.slug}`: \"#/flowhero/\"} className={cls.navbarlinks}>\n\t\t\t\t\t\t\t{`HOME`}\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/\" className={cls.navbarlinks}>\n\t\t\t\t\t\t\t{`CONTACT US`}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/legal\" className={cls.navbarlinks}>\n\t\t\t\t\t\t\t{`PRIVACY`}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\n\n\n\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<div style={{ margin: 'auto', width: '100%', height: '500px', display: 'flex', alignContent: 'center', alignItems: 'center', justifyItems: 'center', justifyContent: 'center' }}>{FLOWHERO('30px', 'var(--app-color-gray-dark)',  'bold')}</div>\n\t);\n});\n\nexport default Login;\n","import moment, { now } from 'moment';\nimport { Observable } from 'rxjs';\nimport { setCompletedTasks, setProcessTask, setTasks, taskDelete, setLastUpdate, addNewTask, editTask, setMessageBar } from '../reduxStore/actions/flowActions';\nimport { store } from '../reduxStore/store';\nimport { URLS } from './API_CONSTANTS';\nimport { axiosInstance } from './axiosInstance';\n\nexport const getTaskById = taskId => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\tconst config = {\n\t\t...URLS.tasks.getTaskById(last_access_token, taskId),\n\t\thandlerEnabled: true,\n\t};\n\n\treturn new Observable(subscriber => {\n\t\taxiosInstance(config)\n\t\t\t.then(response => {\n\t\t\t\tif (response?.status === 200 && response?.data && response?.data?.data) {\n\t\t\t\t\tsubscriber.next(response?.data?.data);\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsubscriber.error(error);\n\t\t\t});\n\t});\n};\nexport const getAllTasksCreatedByUser = (userId, forced = false) => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\n\tconst { lastUpdates, allTasks, axiosAbort } = store.getState().flowReducer;\n\n\tconst config = {\n\t\t...URLS.tasks.getAllTasksCreatedByUser(last_access_token, userId),\n\t\thandlerEnabled: true,\n\t\tsignal: axiosAbort.signal\n\t};\n\n\t//console.log('moment diff tasks', moment(now()).diff(moment(lastUpdates.tasks), 'minutes'), allTasks.length);\n\n\treturn new Observable(subscriber => {\n\t\tif (forced || moment(now()).diff(moment(lastUpdates.tasks), 'minutes') > 10 || allTasks.length === 0) {\n\t\t\taxiosInstance(config)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response?.status === 200 && response?.data && response?.data?.data) {\n\t\t\t\t\t\tconst tasks = response?.data?.data;\n\t\t\t\t\t\tstore.dispatch(setTasks(tasks));\n\t\t\t\t\t\tsubscriber.next(tasks);\n\t\t\t\t\t\tsubscriber.complete();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsubscriber.error(error);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsubscriber.complete();\n\t\t}\n\t});\n};\nexport const getAllTasks = (userId, forced = false) => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\n\tconst { lastUpdates, allTasks, axiosAbort } = store.getState().flowReducer;\n\n\tconst config = {\n\t\t...URLS.tasks.getAllTasks(last_access_token, userId),\n\t\thandlerEnabled: true,\n\t\tsignal: axiosAbort.signal\n\t};\n\n\t//console.log('moment diff tasks', moment(now()).diff(moment(lastUpdates.tasks), 'minutes'), allTasks.length);\n\n\treturn new Observable(subscriber => {\n\t\tif (forced || moment(now()).diff(moment(lastUpdates.tasks), 'minutes') > 10 || allTasks.length === 0) {\n\t\t\taxiosInstance(config)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response?.status === 200 && response?.data && response?.data?.data) {\n\t\t\t\t\t\tconst tasks = response?.data?.data;\n\t\t\t\t\t\tstore.dispatch(setTasks(tasks));\n\t\t\t\t\t\tstore.dispatch(setLastUpdate({ ...lastUpdates, tasks: now() }));\n\t\t\t\t\t\tsubscriber.next(tasks);\n\t\t\t\t\t\tsubscriber.complete();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsubscriber.error(error);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsubscriber.complete();\n\t\t}\n\t});\n};\nexport const getAllCompletedTasks = (page, userId, forced = false) => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\tconst config = {\n\t\t...URLS.tasks.getAllCompletedTasks(last_access_token, page, userId),\n\t\thandlerEnabled: true,\n\t};\n\n\tconst { lastUpdates, allCompletedTasks } = store.getState().flowReducer;\n\n\t//console.log('moment diff allCompletedTasks', moment(now()).diff(moment(lastUpdates.allCompletedTasks), 'minutes'), allCompletedTasks.data.length);\n\n\treturn new Observable(subscriber => {\n\t\tif (forced || moment(now()).diff(moment(lastUpdates.allCompletedTasks), 'minutes') > 10 || allCompletedTasks.data.length === 0) {\n\t\t\taxiosInstance(config)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response?.status === 200 && response?.data && response?.data?.data) {\n\t\t\t\t\t\tconst tasks = response?.data;\n\t\t\t\t\t\tstore.dispatch(setCompletedTasks(tasks, page));\n\n\t\t\t\t\t\tsubscriber.next(tasks);\n\t\t\t\t\t\tsubscriber.complete();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsubscriber.error(error);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsubscriber.complete();\n\t\t}\n\t});\n};\nexport const deleteTask = taskId => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\tconst data = new FormData();\n\tconst defaultConfig = { ...URLS.tasks.deleteTask(last_access_token, taskId) };\n\tconst config = {\n\t\t...defaultConfig,\n\t\theaders: { ...defaultConfig.headers },\n\t\tdata: data,\n\t\thandlerEnabled: true,\n\t};\n\treturn new Observable(subscriber =>\n\t\taxiosInstance(config)\n\t\t\t.then(response => {\n\t\t\t\tif (response?.status === 200 && response?.data) {\n\t\t\t\t\tstore.dispatch(setMessageBar({ show: true, message: `You have successfully deleted the task`, color: 'red' }));\n\t\t\t\t\tstore.dispatch(taskDelete(taskId));\n\t\t\t\t\tsubscriber.next(response.data);\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsubscriber.error(error);\n\t\t\t})\n\t);\n};\nexport const createTask = taskData => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\tconst data = new FormData();\n\tdata.append('name', taskData.taskName);\n\tdata.append('description', taskData.taskDescription);\n\tdata.append('due_date', taskData.dueDate);\n\t\n\tif (taskData?.newAssignee?.assignee_id)\n\t\tdata.append('assignee_id', taskData.newAssignee.assignee_id);\n\n\tif (taskData.taskProcess) data.append('procedure_id', taskData.taskProcess?.id);\n\tif (taskData.add_info) data.append('add_info', JSON.stringify(taskData.add_info));\n\n\tconst config = {\n\t\t...URLS.tasks.createTask(last_access_token),\n\t\tdata: data,\n\t\thandlerEnabled: true,\n\t};\n\n\treturn new Observable(subscriber =>\n\t\taxiosInstance(config)\n\t\t\t.then(response => {\n\t\t\t\tif (response?.data && response?.data?.data) {\n\t\t\t\t\tconst task = response?.data?.data;\n\t\t\t\t\tstore.dispatch(addNewTask(task));\n\t\t\t\t\tstore.dispatch(setMessageBar({ show: true, message: `You have successfully created a new task` }));\n\t\t\t\t\tsubscriber.next(task);\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsubscriber.error(error);\n\t\t\t})\n\t);\n};\nexport const startTask = taskId => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\tconst config = {\n\t\t...URLS.tasks.startTaskById(last_access_token, taskId),\n\t\tdata: taskId,\n\t\thandlerEnabled: true,\n\t\tforwardAllErrors: true,\n\t};\n\n\treturn new Observable(subscriber =>\n\t\taxiosInstance(config)\n\t\t\t.then(response => {\n\t\t\t\tif (response?.data && response?.data?.data) {\n\t\t\t\t\tstore.dispatch(editTask(response?.data?.data));\n\n\t\t\t\t\tsubscriber.next();\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsubscriber.error(error);\n\t\t\t})\n\t);\n};\nexport const completeTask = taskId => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\tconst config = {\n\t\t...URLS.tasks.endTaskById(last_access_token, taskId),\n\t\tdata: taskId,\n\t\tforwardAllErrors: true,\n\t};\n\n\treturn new Observable(subscriber =>\n\t\taxiosInstance(config)\n\t\t\t.then(response => {\n\t\t\t\tif (response?.data && response?.data?.data) {\n\t\t\t\t\tstore.dispatch(editTask(response?.data?.data));\n\t\t\t\t\tsubscriber.next();\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsubscriber.error(error);\n\t\t\t})\n\t);\n};\nexport const updateTask = (taskData, taskId) => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\n\tconst data = {\n\t\tname: taskData.name,\n\t\tdescription: taskData.description,\n\t\tdue_date: taskData.dueDate,\n\t\tassignee_id: taskData.assignee_id,\n\t\tstatus: taskData?.status ?? '',\n\t};\n\n\tif (taskData.add_info) data.add_info = JSON.stringify(taskData.add_info);\n\n\tconst config = {\n\t\t...URLS.tasks.editTask(last_access_token, taskId),\n\t\tdata: data,\n\t\tforwardAllErrors: true,\n\t};\n\n\treturn new Observable(subscriber =>\n\t\taxiosInstance(config)\n\t\t\t.then(response => {\n\t\t\t\tif (response?.data && response?.data?.data) {\n\t\t\t\t\tconst task = response?.data?.data;\n\t\t\t\t\tstore.dispatch(editTask(task));\n\t\t\t\t\tsubscriber.next(task);\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsubscriber.error(error);\n\t\t\t})\n\t);\n};\nexport const getTaskStepsComponent = (taskId, processId, stepId) => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\tconst data = new FormData();\n\tstepId && data.append('step_id', stepId);\n\tprocessId && data.append('process_id', processId);\n\n\tconst config = {\n\t\tdata: data,\n\t\t...URLS.tasks.getStepComponents(last_access_token, taskId),\n\t\tforwardAllErrors: true,\n\t};\n\treturn new Observable(subscriber =>\n\t\taxiosInstance(config)\n\t\t\t.then(response => {\n\t\t\t\tif (response?.status === 200 && response?.data) {\n\t\t\t\t\tsubscriber.next(response.data.data);\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsubscriber.error(error);\n\t\t\t})\n\t);\n};\nexport const getTaskInheritedComponents = (taskId, processId) => {\n\tconst {\n\t\tsessionSettings: { last_access_token },\n\t} = store.getState().authReducer;\n\tconst data = new FormData();\n\n\tdata.append('process_id', processId);\n\n\tconst config = {\n\t\tdata: data,\n\t\t...URLS.tasks.getInheritedComponents(last_access_token, taskId),\n\t\tforwardAllErrors: true,\n\t};\n\treturn new Observable(subscriber =>\n\t\taxiosInstance(config)\n\t\t\t.then(response => {\n\t\t\t\tif (response?.status === 200 && response?.data) {\n\t\t\t\t\tsubscriber.next(response.data.data);\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsubscriber.error(error);\n\t\t\t})\n\t);\n};\n"],"names":["yupPassword","yup","UserTextField","forwardRef","props","ref","isDisabled","readOnly","label","hasMandatoryIndicator","placeholder","charactersNo","icon","rightButtonLabel","rightButtonAction","rightButtonClass","errorMessage","defaultValue","onChange","name","type","autoComplete","rest","_objectWithoutProperties","_excluded2","inputValue","setInputValue","useState","hasError","Boolean","React","Label","className","cls","InputContainer","Input","disabled","value","maxLength","event","target","onClick","classNames","style","fontFamily","fontSize","fontWeight","ErrorMessage","_excluded3","_extends","_excluded4","children","_excluded5","_excluded6","showPassword","setShowPassword","createElement","FontAwesomeIcon","faEye","color","width","height","faEyeSlash","c","accessRestrictedMessage","concat","APP_NAME","LoginForm","memo","_localStorage$getItem","_localStorage$getItem2","_errors$password","_errors$email","_errors$password$mess","_errors$password2","_errors$email$message","_errors$email2","onLoginSuccess","onResetPassword","dispatch","useDispatch","rememberMe","useSelector","reduxStore","authReducer","sessionSettings","loading","setLoading","responseError","setResponseError","schemas","useMemo","email","min","password","passwordRepeat","oneOf","required","website","url","phoneNumber","test","message","arguments","length","undefined","isValidPhoneNumber","mobilePhoneNumber","employerName","register","handleSubmit","formState","errors","getValues","useForm","mode","criteriaMode","resolver","yupResolver","object","shape","onSubmit","_data","userLogin","pipe","take","subscribe","next","data","is_admin","onboarding_status","setOnBoardingVisible","setIsOnboarding","setOnBoardingModalsVisibility","firstModalVisible","setShowMenu","setOnBoardingComplete","error","_error$data","extractedError","status","backgroundColor","localStorage","getItem","PasswordTextField","Button","title","isMobile","getMasterData","userOnly","authenticatedUser","store","companyData","flowReducer","getAllComponentBlueprints","CLEAR_TO_SET_DATA","complete","getFieldTypes","getAllModules","APPEND_TO_DATA","getAllCompanyPositionsAsArray","getAllTasks","id","getAllCompletedTasks","getAllUsers","PAYMONGO_KEY","getSubscriptionPlans","_JSON$parse","_company$display_name","navigate","useNavigate","lastUpdates","authenticated","sessionReducer","company","JSON","parse","document","useEffect","restartAxiosAbort","resetApplication","display","flexDirection","padding","minWidth","marginTop","logo","display_name","toUpperCase","alt","src","FLOWHERO","isSingleApp","componentsByModule","getMobileData","justifyContent","marginRight","href","slug","margin","alignContent","alignItems","justifyItems","getTaskById","taskId","last_access_token","config","_objectSpread","URLS","handlerEnabled","Observable","subscriber","axiosInstance","then","response","_response$data","_response$data2","catch","getAllTasksCreatedByUser","userId","forced","allTasks","axiosAbort","signal","moment","now","diff","tasks","_response$data3","_response$data4","setTasks","_response$data5","_response$data6","setLastUpdate","page","allCompletedTasks","_response$data7","setCompletedTasks","deleteTask","FormData","defaultConfig","headers","setMessageBar","show","taskDelete","createTask","taskData","_taskData$newAssignee","_taskData$taskProcess","append","taskName","taskDescription","dueDate","newAssignee","assignee_id","taskProcess","add_info","stringify","_response$data8","_response$data9","task","addNewTask","updateTask","_taskData$status","description","due_date","forwardAllErrors","_response$data12","_response$data13","editTask"],"sourceRoot":""}